{"ast":null,"code":"import { ExternalInteractorBase, drawLine, getDistance, getLinkColor, getLinkRandomColor, getStyleFromRgb, isInArray, mouseMoveEvent } from \"tsparticles-engine\";\nimport { Grab } from \"./Options/Classes/Grab\";\nexport function drawGrabLine(context, width, begin, end, colorLine, opacity) {\n  drawLine(context, begin, end);\n  context.strokeStyle = getStyleFromRgb(colorLine, opacity);\n  context.lineWidth = width;\n  context.stroke();\n}\nfunction drawGrab(container, particle, lineColor, opacity, mousePos) {\n  container.canvas.draw(ctx => {\n    var _a;\n    const beginPos = particle.getPosition();\n    drawGrabLine(ctx, (_a = particle.retina.linksWidth) !== null && _a !== void 0 ? _a : 0, beginPos, mousePos, lineColor, opacity);\n  });\n}\nexport class Grabber extends ExternalInteractorBase {\n  constructor(container) {\n    super(container);\n  }\n  clear() {}\n  init() {\n    const container = this.container,\n      grab = container.actualOptions.interactivity.modes.grab;\n    if (!grab) {\n      return;\n    }\n    container.retina.grabModeDistance = grab.distance * container.retina.pixelRatio;\n  }\n  async interact() {\n    var _a, _b;\n    const container = this.container,\n      options = container.actualOptions,\n      interactivity = options.interactivity;\n    if (!interactivity.modes.grab || !interactivity.events.onHover.enable || container.interactivity.status !== mouseMoveEvent) {\n      return;\n    }\n    const mousePos = container.interactivity.mouse.position;\n    if (!mousePos) {\n      return;\n    }\n    const distance = container.retina.grabModeDistance;\n    if (!distance || distance < 0) {\n      return;\n    }\n    const query = container.particles.quadTree.queryCircle(mousePos, distance, p => this.isEnabled(p));\n    for (const particle of query) {\n      const pos = particle.getPosition(),\n        pointDistance = getDistance(pos, mousePos);\n      if (pointDistance > distance) {\n        continue;\n      }\n      const grabLineOptions = interactivity.modes.grab.links,\n        lineOpacity = grabLineOptions.opacity,\n        opacityLine = lineOpacity - pointDistance * lineOpacity / distance;\n      if (opacityLine <= 0) {\n        continue;\n      }\n      const optColor = (_a = grabLineOptions.color) !== null && _a !== void 0 ? _a : (_b = particle.options.links) === null || _b === void 0 ? void 0 : _b.color;\n      if (!container.particles.grabLineColor && optColor) {\n        const linksOptions = interactivity.modes.grab.links;\n        container.particles.grabLineColor = getLinkRandomColor(optColor, linksOptions.blink, linksOptions.consent);\n      }\n      const colorLine = getLinkColor(particle, undefined, container.particles.grabLineColor);\n      if (!colorLine) {\n        return;\n      }\n      drawGrab(container, particle, colorLine, opacityLine, mousePos);\n    }\n  }\n  isEnabled(particle) {\n    var _a;\n    const container = this.container,\n      mouse = container.interactivity.mouse,\n      events = ((_a = particle === null || particle === void 0 ? void 0 : particle.interactivity) !== null && _a !== void 0 ? _a : container.actualOptions.interactivity).events;\n    return events.onHover.enable && !!mouse.position && isInArray(\"grab\", events.onHover.mode);\n  }\n  loadModeOptions(options) {\n    if (!options.grab) {\n      options.grab = new Grab();\n    }\n    for (var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      sources[_key - 1] = arguments[_key];\n    }\n    for (const source of sources) {\n      options.grab.load(source === null || source === void 0 ? void 0 : source.grab);\n    }\n  }\n  reset() {}\n}","map":{"version":3,"names":["ExternalInteractorBase","drawLine","getDistance","getLinkColor","getLinkRandomColor","getStyleFromRgb","isInArray","mouseMoveEvent","Grab","drawGrabLine","context","width","begin","end","colorLine","opacity","strokeStyle","lineWidth","stroke","drawGrab","container","particle","lineColor","mousePos","canvas","draw","ctx","_a","beginPos","getPosition","retina","linksWidth","Grabber","constructor","clear","init","grab","actualOptions","interactivity","modes","grabModeDistance","distance","pixelRatio","interact","_b","options","events","onHover","enable","status","mouse","position","query","particles","quadTree","queryCircle","p","isEnabled","pos","pointDistance","grabLineOptions","links","lineOpacity","opacityLine","optColor","color","grabLineColor","linksOptions","blink","consent","undefined","mode","loadModeOptions","_len","arguments","length","sources","Array","_key","source","load","reset"],"sources":["/Users/adri22/Desktop/AVA-Bot/app-web/node_modules/tsparticles-interaction-external-grab/esm/Grabber.js"],"sourcesContent":["import { ExternalInteractorBase, drawLine, getDistance, getLinkColor, getLinkRandomColor, getStyleFromRgb, isInArray, mouseMoveEvent, } from \"tsparticles-engine\";\nimport { Grab } from \"./Options/Classes/Grab\";\nexport function drawGrabLine(context, width, begin, end, colorLine, opacity) {\n    drawLine(context, begin, end);\n    context.strokeStyle = getStyleFromRgb(colorLine, opacity);\n    context.lineWidth = width;\n    context.stroke();\n}\nfunction drawGrab(container, particle, lineColor, opacity, mousePos) {\n    container.canvas.draw((ctx) => {\n        var _a;\n        const beginPos = particle.getPosition();\n        drawGrabLine(ctx, (_a = particle.retina.linksWidth) !== null && _a !== void 0 ? _a : 0, beginPos, mousePos, lineColor, opacity);\n    });\n}\nexport class Grabber extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, grab = container.actualOptions.interactivity.modes.grab;\n        if (!grab) {\n            return;\n        }\n        container.retina.grabModeDistance = grab.distance * container.retina.pixelRatio;\n    }\n    async interact() {\n        var _a, _b;\n        const container = this.container, options = container.actualOptions, interactivity = options.interactivity;\n        if (!interactivity.modes.grab ||\n            !interactivity.events.onHover.enable ||\n            container.interactivity.status !== mouseMoveEvent) {\n            return;\n        }\n        const mousePos = container.interactivity.mouse.position;\n        if (!mousePos) {\n            return;\n        }\n        const distance = container.retina.grabModeDistance;\n        if (!distance || distance < 0) {\n            return;\n        }\n        const query = container.particles.quadTree.queryCircle(mousePos, distance, (p) => this.isEnabled(p));\n        for (const particle of query) {\n            const pos = particle.getPosition(), pointDistance = getDistance(pos, mousePos);\n            if (pointDistance > distance) {\n                continue;\n            }\n            const grabLineOptions = interactivity.modes.grab.links, lineOpacity = grabLineOptions.opacity, opacityLine = lineOpacity - (pointDistance * lineOpacity) / distance;\n            if (opacityLine <= 0) {\n                continue;\n            }\n            const optColor = (_a = grabLineOptions.color) !== null && _a !== void 0 ? _a : (_b = particle.options.links) === null || _b === void 0 ? void 0 : _b.color;\n            if (!container.particles.grabLineColor && optColor) {\n                const linksOptions = interactivity.modes.grab.links;\n                container.particles.grabLineColor = getLinkRandomColor(optColor, linksOptions.blink, linksOptions.consent);\n            }\n            const colorLine = getLinkColor(particle, undefined, container.particles.grabLineColor);\n            if (!colorLine) {\n                return;\n            }\n            drawGrab(container, particle, colorLine, opacityLine, mousePos);\n        }\n    }\n    isEnabled(particle) {\n        var _a;\n        const container = this.container, mouse = container.interactivity.mouse, events = ((_a = particle === null || particle === void 0 ? void 0 : particle.interactivity) !== null && _a !== void 0 ? _a : container.actualOptions.interactivity).events;\n        return events.onHover.enable && !!mouse.position && isInArray(\"grab\", events.onHover.mode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.grab) {\n            options.grab = new Grab();\n        }\n        for (const source of sources) {\n            options.grab.load(source === null || source === void 0 ? void 0 : source.grab);\n        }\n    }\n    reset() {\n    }\n}\n"],"mappings":"AAAA,SAASA,sBAAsB,EAAEC,QAAQ,EAAEC,WAAW,EAAEC,YAAY,EAAEC,kBAAkB,EAAEC,eAAe,EAAEC,SAAS,EAAEC,cAAc,QAAS,oBAAoB;AACjK,SAASC,IAAI,QAAQ,wBAAwB;AAC7C,OAAO,SAASC,YAAYA,CAACC,OAAO,EAAEC,KAAK,EAAEC,KAAK,EAAEC,GAAG,EAAEC,SAAS,EAAEC,OAAO,EAAE;EACzEd,QAAQ,CAACS,OAAO,EAAEE,KAAK,EAAEC,GAAG,CAAC;EAC7BH,OAAO,CAACM,WAAW,GAAGX,eAAe,CAACS,SAAS,EAAEC,OAAO,CAAC;EACzDL,OAAO,CAACO,SAAS,GAAGN,KAAK;EACzBD,OAAO,CAACQ,MAAM,EAAE;AACpB;AACA,SAASC,QAAQA,CAACC,SAAS,EAAEC,QAAQ,EAAEC,SAAS,EAAEP,OAAO,EAAEQ,QAAQ,EAAE;EACjEH,SAAS,CAACI,MAAM,CAACC,IAAI,CAAEC,GAAG,IAAK;IAC3B,IAAIC,EAAE;IACN,MAAMC,QAAQ,GAAGP,QAAQ,CAACQ,WAAW,EAAE;IACvCpB,YAAY,CAACiB,GAAG,EAAE,CAACC,EAAE,GAAGN,QAAQ,CAACS,MAAM,CAACC,UAAU,MAAM,IAAI,IAAIJ,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG,CAAC,EAAEC,QAAQ,EAAEL,QAAQ,EAAED,SAAS,EAAEP,OAAO,CAAC;EACnI,CAAC,CAAC;AACN;AACA,OAAO,MAAMiB,OAAO,SAAShC,sBAAsB,CAAC;EAChDiC,WAAWA,CAACb,SAAS,EAAE;IACnB,KAAK,CAACA,SAAS,CAAC;EACpB;EACAc,KAAKA,CAAA,EAAG,CACR;EACAC,IAAIA,CAAA,EAAG;IACH,MAAMf,SAAS,GAAG,IAAI,CAACA,SAAS;MAAEgB,IAAI,GAAGhB,SAAS,CAACiB,aAAa,CAACC,aAAa,CAACC,KAAK,CAACH,IAAI;IACzF,IAAI,CAACA,IAAI,EAAE;MACP;IACJ;IACAhB,SAAS,CAACU,MAAM,CAACU,gBAAgB,GAAGJ,IAAI,CAACK,QAAQ,GAAGrB,SAAS,CAACU,MAAM,CAACY,UAAU;EACnF;EACA,MAAMC,QAAQA,CAAA,EAAG;IACb,IAAIhB,EAAE,EAAEiB,EAAE;IACV,MAAMxB,SAAS,GAAG,IAAI,CAACA,SAAS;MAAEyB,OAAO,GAAGzB,SAAS,CAACiB,aAAa;MAAEC,aAAa,GAAGO,OAAO,CAACP,aAAa;IAC1G,IAAI,CAACA,aAAa,CAACC,KAAK,CAACH,IAAI,IACzB,CAACE,aAAa,CAACQ,MAAM,CAACC,OAAO,CAACC,MAAM,IACpC5B,SAAS,CAACkB,aAAa,CAACW,MAAM,KAAK1C,cAAc,EAAE;MACnD;IACJ;IACA,MAAMgB,QAAQ,GAAGH,SAAS,CAACkB,aAAa,CAACY,KAAK,CAACC,QAAQ;IACvD,IAAI,CAAC5B,QAAQ,EAAE;MACX;IACJ;IACA,MAAMkB,QAAQ,GAAGrB,SAAS,CAACU,MAAM,CAACU,gBAAgB;IAClD,IAAI,CAACC,QAAQ,IAAIA,QAAQ,GAAG,CAAC,EAAE;MAC3B;IACJ;IACA,MAAMW,KAAK,GAAGhC,SAAS,CAACiC,SAAS,CAACC,QAAQ,CAACC,WAAW,CAAChC,QAAQ,EAAEkB,QAAQ,EAAGe,CAAC,IAAK,IAAI,CAACC,SAAS,CAACD,CAAC,CAAC,CAAC;IACpG,KAAK,MAAMnC,QAAQ,IAAI+B,KAAK,EAAE;MAC1B,MAAMM,GAAG,GAAGrC,QAAQ,CAACQ,WAAW,EAAE;QAAE8B,aAAa,GAAGzD,WAAW,CAACwD,GAAG,EAAEnC,QAAQ,CAAC;MAC9E,IAAIoC,aAAa,GAAGlB,QAAQ,EAAE;QAC1B;MACJ;MACA,MAAMmB,eAAe,GAAGtB,aAAa,CAACC,KAAK,CAACH,IAAI,CAACyB,KAAK;QAAEC,WAAW,GAAGF,eAAe,CAAC7C,OAAO;QAAEgD,WAAW,GAAGD,WAAW,GAAIH,aAAa,GAAGG,WAAW,GAAIrB,QAAQ;MACnK,IAAIsB,WAAW,IAAI,CAAC,EAAE;QAClB;MACJ;MACA,MAAMC,QAAQ,GAAG,CAACrC,EAAE,GAAGiC,eAAe,CAACK,KAAK,MAAM,IAAI,IAAItC,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG,CAACiB,EAAE,GAAGvB,QAAQ,CAACwB,OAAO,CAACgB,KAAK,MAAM,IAAI,IAAIjB,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACqB,KAAK;MAC1J,IAAI,CAAC7C,SAAS,CAACiC,SAAS,CAACa,aAAa,IAAIF,QAAQ,EAAE;QAChD,MAAMG,YAAY,GAAG7B,aAAa,CAACC,KAAK,CAACH,IAAI,CAACyB,KAAK;QACnDzC,SAAS,CAACiC,SAAS,CAACa,aAAa,GAAG9D,kBAAkB,CAAC4D,QAAQ,EAAEG,YAAY,CAACC,KAAK,EAAED,YAAY,CAACE,OAAO,CAAC;MAC9G;MACA,MAAMvD,SAAS,GAAGX,YAAY,CAACkB,QAAQ,EAAEiD,SAAS,EAAElD,SAAS,CAACiC,SAAS,CAACa,aAAa,CAAC;MACtF,IAAI,CAACpD,SAAS,EAAE;QACZ;MACJ;MACAK,QAAQ,CAACC,SAAS,EAAEC,QAAQ,EAAEP,SAAS,EAAEiD,WAAW,EAAExC,QAAQ,CAAC;IACnE;EACJ;EACAkC,SAASA,CAACpC,QAAQ,EAAE;IAChB,IAAIM,EAAE;IACN,MAAMP,SAAS,GAAG,IAAI,CAACA,SAAS;MAAE8B,KAAK,GAAG9B,SAAS,CAACkB,aAAa,CAACY,KAAK;MAAEJ,MAAM,GAAG,CAAC,CAACnB,EAAE,GAAGN,QAAQ,KAAK,IAAI,IAAIA,QAAQ,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,QAAQ,CAACiB,aAAa,MAAM,IAAI,IAAIX,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAGP,SAAS,CAACiB,aAAa,CAACC,aAAa,EAAEQ,MAAM;IACnP,OAAOA,MAAM,CAACC,OAAO,CAACC,MAAM,IAAI,CAAC,CAACE,KAAK,CAACC,QAAQ,IAAI7C,SAAS,CAAC,MAAM,EAAEwC,MAAM,CAACC,OAAO,CAACwB,IAAI,CAAC;EAC9F;EACAC,eAAeA,CAAC3B,OAAO,EAAc;IACjC,IAAI,CAACA,OAAO,CAACT,IAAI,EAAE;MACfS,OAAO,CAACT,IAAI,GAAG,IAAI5B,IAAI,EAAE;IAC7B;IAAC,SAAAiE,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAHuBC,OAAO,OAAAC,KAAA,CAAAJ,IAAA,OAAAA,IAAA,WAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;MAAPF,OAAO,CAAAE,IAAA,QAAAJ,SAAA,CAAAI,IAAA;IAAA;IAI/B,KAAK,MAAMC,MAAM,IAAIH,OAAO,EAAE;MAC1B/B,OAAO,CAACT,IAAI,CAAC4C,IAAI,CAACD,MAAM,KAAK,IAAI,IAAIA,MAAM,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,MAAM,CAAC3C,IAAI,CAAC;IAClF;EACJ;EACA6C,KAAKA,CAAA,EAAG,CACR;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}