{"ast":null,"code":"import { getRandom, getRangeValue, randomInRange, setRangeValue } from \"tsparticles-engine\";\nimport { Life } from \"./Options/Classes/Life\";\nexport class LifeUpdater {\n  constructor(container) {\n    this.container = container;\n  }\n  init(particle) {\n    const container = this.container,\n      particlesOptions = particle.options,\n      lifeOptions = particlesOptions.life;\n    if (!lifeOptions) {\n      return;\n    }\n    particle.life = {\n      delay: container.retina.reduceFactor ? getRangeValue(lifeOptions.delay.value) * (lifeOptions.delay.sync ? 1 : getRandom()) / container.retina.reduceFactor * 1000 : 0,\n      delayTime: 0,\n      duration: container.retina.reduceFactor ? getRangeValue(lifeOptions.duration.value) * (lifeOptions.duration.sync ? 1 : getRandom()) / container.retina.reduceFactor * 1000 : 0,\n      time: 0,\n      count: lifeOptions.count\n    };\n    if (particle.life.duration <= 0) {\n      particle.life.duration = -1;\n    }\n    if (particle.life.count <= 0) {\n      particle.life.count = -1;\n    }\n    if (particle.life) {\n      particle.spawning = particle.life.delay > 0;\n    }\n  }\n  isEnabled(particle) {\n    return !particle.destroyed;\n  }\n  loadOptions(options) {\n    if (!options.life) {\n      options.life = new Life();\n    }\n    for (var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      sources[_key - 1] = arguments[_key];\n    }\n    for (const source of sources) {\n      options.life.load(source === null || source === void 0 ? void 0 : source.life);\n    }\n  }\n  update(particle, delta) {\n    if (!this.isEnabled(particle) || !particle.life) {\n      return;\n    }\n    const life = particle.life;\n    let justSpawned = false;\n    if (particle.spawning) {\n      life.delayTime += delta.value;\n      if (life.delayTime >= particle.life.delay) {\n        justSpawned = true;\n        particle.spawning = false;\n        life.delayTime = 0;\n        life.time = 0;\n      } else {\n        return;\n      }\n    }\n    if (life.duration === -1) {\n      return;\n    }\n    if (particle.spawning) {\n      return;\n    }\n    if (justSpawned) {\n      life.time = 0;\n    } else {\n      life.time += delta.value;\n    }\n    if (life.time < life.duration) {\n      return;\n    }\n    life.time = 0;\n    if (particle.life.count > 0) {\n      particle.life.count--;\n    }\n    if (particle.life.count === 0) {\n      particle.destroy();\n      return;\n    }\n    const canvasSize = this.container.canvas.size,\n      widthRange = setRangeValue(0, canvasSize.width),\n      heightRange = setRangeValue(0, canvasSize.width);\n    particle.position.x = randomInRange(widthRange);\n    particle.position.y = randomInRange(heightRange);\n    particle.spawning = true;\n    life.delayTime = 0;\n    life.time = 0;\n    particle.reset();\n    const lifeOptions = particle.options.life;\n    if (lifeOptions) {\n      life.delay = getRangeValue(lifeOptions.delay.value) * 1000;\n      life.duration = getRangeValue(lifeOptions.duration.value) * 1000;\n    }\n  }\n}","map":{"version":3,"names":["getRandom","getRangeValue","randomInRange","setRangeValue","Life","LifeUpdater","constructor","container","init","particle","particlesOptions","options","lifeOptions","life","delay","retina","reduceFactor","value","sync","delayTime","duration","time","count","spawning","isEnabled","destroyed","loadOptions","_len","arguments","length","sources","Array","_key","source","load","update","delta","justSpawned","destroy","canvasSize","canvas","size","widthRange","width","heightRange","position","x","y","reset"],"sources":["/Users/adri22/Desktop/AVA-Bot/app-web/node_modules/tsparticles-updater-life/esm/LifeUpdater.js"],"sourcesContent":["import { getRandom, getRangeValue, randomInRange, setRangeValue } from \"tsparticles-engine\";\nimport { Life } from \"./Options/Classes/Life\";\nexport class LifeUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const container = this.container, particlesOptions = particle.options, lifeOptions = particlesOptions.life;\n        if (!lifeOptions) {\n            return;\n        }\n        particle.life = {\n            delay: container.retina.reduceFactor\n                ? ((getRangeValue(lifeOptions.delay.value) * (lifeOptions.delay.sync ? 1 : getRandom())) /\n                    container.retina.reduceFactor) *\n                    1000\n                : 0,\n            delayTime: 0,\n            duration: container.retina.reduceFactor\n                ? ((getRangeValue(lifeOptions.duration.value) * (lifeOptions.duration.sync ? 1 : getRandom())) /\n                    container.retina.reduceFactor) *\n                    1000\n                : 0,\n            time: 0,\n            count: lifeOptions.count,\n        };\n        if (particle.life.duration <= 0) {\n            particle.life.duration = -1;\n        }\n        if (particle.life.count <= 0) {\n            particle.life.count = -1;\n        }\n        if (particle.life) {\n            particle.spawning = particle.life.delay > 0;\n        }\n    }\n    isEnabled(particle) {\n        return !particle.destroyed;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.life) {\n            options.life = new Life();\n        }\n        for (const source of sources) {\n            options.life.load(source === null || source === void 0 ? void 0 : source.life);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle) || !particle.life) {\n            return;\n        }\n        const life = particle.life;\n        let justSpawned = false;\n        if (particle.spawning) {\n            life.delayTime += delta.value;\n            if (life.delayTime >= particle.life.delay) {\n                justSpawned = true;\n                particle.spawning = false;\n                life.delayTime = 0;\n                life.time = 0;\n            }\n            else {\n                return;\n            }\n        }\n        if (life.duration === -1) {\n            return;\n        }\n        if (particle.spawning) {\n            return;\n        }\n        if (justSpawned) {\n            life.time = 0;\n        }\n        else {\n            life.time += delta.value;\n        }\n        if (life.time < life.duration) {\n            return;\n        }\n        life.time = 0;\n        if (particle.life.count > 0) {\n            particle.life.count--;\n        }\n        if (particle.life.count === 0) {\n            particle.destroy();\n            return;\n        }\n        const canvasSize = this.container.canvas.size, widthRange = setRangeValue(0, canvasSize.width), heightRange = setRangeValue(0, canvasSize.width);\n        particle.position.x = randomInRange(widthRange);\n        particle.position.y = randomInRange(heightRange);\n        particle.spawning = true;\n        life.delayTime = 0;\n        life.time = 0;\n        particle.reset();\n        const lifeOptions = particle.options.life;\n        if (lifeOptions) {\n            life.delay = getRangeValue(lifeOptions.delay.value) * 1000;\n            life.duration = getRangeValue(lifeOptions.duration.value) * 1000;\n        }\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}