{"ast":null,"code":"import { Vector, calcPositionOrRandomFromSizeRanged, deepExtend, getRangeValue, isPointInside, itemFromSingleOrMultiple, randomInRange, rangeColorToHsl } from \"tsparticles-engine\";\nimport { Emitter } from \"./Options/Classes/Emitter\";\nimport { EmitterSize } from \"./Options/Classes/EmitterSize\";\nexport class EmitterInstance {\n  constructor(engine, emitters, container, options, position) {\n    var _a, _b, _c, _d, _e, _f, _g;\n    var _h;\n    this.emitters = emitters;\n    this.container = container;\n    this._engine = engine;\n    this._currentDuration = 0;\n    this._currentEmitDelay = 0;\n    this._currentSpawnDelay = 0;\n    this._initialPosition = position;\n    if (options instanceof Emitter) {\n      this.options = options;\n    } else {\n      this.options = new Emitter();\n      this.options.load(options);\n    }\n    this._spawnDelay = ((_a = this.options.life.delay) !== null && _a !== void 0 ? _a : 0) * 1000 / this.container.retina.reduceFactor;\n    this.position = (_b = this._initialPosition) !== null && _b !== void 0 ? _b : this.calcPosition();\n    this.name = this.options.name;\n    this._shape = (_c = this._engine.emitterShapeManager) === null || _c === void 0 ? void 0 : _c.getShape(this.options.shape);\n    this.fill = this.options.fill;\n    this._firstSpawn = !this.options.life.wait;\n    this._startParticlesAdded = false;\n    let particlesOptions = deepExtend({}, this.options.particles);\n    particlesOptions !== null && particlesOptions !== void 0 ? particlesOptions : particlesOptions = {};\n    (_d = particlesOptions.move) !== null && _d !== void 0 ? _d : particlesOptions.move = {};\n    (_e = (_h = particlesOptions.move).direction) !== null && _e !== void 0 ? _e : _h.direction = this.options.direction;\n    if (this.options.spawnColor) {\n      this.spawnColor = rangeColorToHsl(this.options.spawnColor);\n    }\n    this._paused = !this.options.autoPlay;\n    this._particlesOptions = particlesOptions;\n    this.size = (_f = this.options.size) !== null && _f !== void 0 ? _f : (() => {\n      const size = new EmitterSize();\n      size.load({\n        height: 0,\n        mode: \"percent\",\n        width: 0\n      });\n      return size;\n    })();\n    this._lifeCount = (_g = this.options.life.count) !== null && _g !== void 0 ? _g : -1;\n    this._immortal = this._lifeCount <= 0;\n    this._engine.dispatchEvent(\"emitterCreated\", {\n      container,\n      data: {\n        emitter: this\n      }\n    });\n    this.play();\n  }\n  externalPause() {\n    this._paused = true;\n    this.pause();\n  }\n  externalPlay() {\n    this._paused = false;\n    this.play();\n  }\n  getPosition() {\n    if (this.options.domId) {\n      const container = this.container,\n        element = document.getElementById(this.options.domId);\n      if (element) {\n        const elRect = element.getBoundingClientRect();\n        return {\n          x: (elRect.x + elRect.width / 2) * container.retina.pixelRatio,\n          y: (elRect.y + elRect.height / 2) * container.retina.pixelRatio\n        };\n      }\n    }\n    return this.position;\n  }\n  getSize() {\n    const container = this.container;\n    if (this.options.domId) {\n      const element = document.getElementById(this.options.domId);\n      if (element) {\n        const elRect = element.getBoundingClientRect();\n        return {\n          width: elRect.width * container.retina.pixelRatio,\n          height: elRect.height * container.retina.pixelRatio\n        };\n      }\n    }\n    return {\n      width: this.size.mode === \"percent\" ? container.canvas.size.width * this.size.width / 100 : this.size.width,\n      height: this.size.mode === \"percent\" ? container.canvas.size.height * this.size.height / 100 : this.size.height\n    };\n  }\n  pause() {\n    if (this._paused) {\n      return;\n    }\n    delete this._emitDelay;\n  }\n  play() {\n    var _a;\n    if (this._paused) {\n      return;\n    }\n    if (!(this.container.retina.reduceFactor && (this._lifeCount > 0 || this._immortal || !this.options.life.count) && (this._firstSpawn || this._currentSpawnDelay >= ((_a = this._spawnDelay) !== null && _a !== void 0 ? _a : 0)))) {\n      return;\n    }\n    if (this._emitDelay === undefined) {\n      const delay = getRangeValue(this.options.rate.delay);\n      this._emitDelay = 1000 * delay / this.container.retina.reduceFactor;\n    }\n    if (this._lifeCount > 0 || this._immortal) {\n      this.prepareToDie();\n    }\n  }\n  resize() {\n    const initialPosition = this._initialPosition;\n    this.position = initialPosition && isPointInside(initialPosition, this.container.canvas.size, Vector.origin) ? initialPosition : this.calcPosition();\n  }\n  update(delta) {\n    var _a, _b, _c;\n    if (this._paused) {\n      return;\n    }\n    if (this._firstSpawn) {\n      this._firstSpawn = false;\n      this._currentSpawnDelay = (_a = this._spawnDelay) !== null && _a !== void 0 ? _a : 0;\n      this._currentEmitDelay = (_b = this._emitDelay) !== null && _b !== void 0 ? _b : 0;\n    }\n    if (!this._startParticlesAdded) {\n      this._startParticlesAdded = true;\n      this.emitParticles(this.options.startCount);\n    }\n    if (this._duration !== undefined) {\n      this._currentDuration += delta.value;\n      if (this._currentDuration >= this._duration) {\n        this.pause();\n        if (this._spawnDelay !== undefined) {\n          delete this._spawnDelay;\n        }\n        if (!this._immortal) {\n          this._lifeCount--;\n        }\n        if (this._lifeCount > 0 || this._immortal) {\n          this.position = this.calcPosition();\n          this._spawnDelay = ((_c = this.options.life.delay) !== null && _c !== void 0 ? _c : 0) * 1000 / this.container.retina.reduceFactor;\n        } else {\n          this.destroy();\n        }\n        this._currentDuration -= this._duration;\n        delete this._duration;\n      }\n    }\n    if (this._spawnDelay !== undefined) {\n      this._currentSpawnDelay += delta.value;\n      if (this._currentSpawnDelay >= this._spawnDelay) {\n        this._engine.dispatchEvent(\"emitterPlay\", {\n          container: this.container\n        });\n        this.play();\n        this._currentSpawnDelay -= this._currentSpawnDelay;\n        delete this._spawnDelay;\n      }\n    }\n    if (this._emitDelay !== undefined) {\n      this._currentEmitDelay += delta.value;\n      if (this._currentEmitDelay >= this._emitDelay) {\n        this.emit();\n        this._currentEmitDelay -= this._emitDelay;\n      }\n    }\n  }\n  calcPosition() {\n    return calcPositionOrRandomFromSizeRanged({\n      size: this.container.canvas.size,\n      position: this.options.position\n    });\n  }\n  destroy() {\n    this.emitters.removeEmitter(this);\n    this._engine.dispatchEvent(\"emitterDestroyed\", {\n      container: this.container,\n      data: {\n        emitter: this\n      }\n    });\n  }\n  emit() {\n    if (this._paused) {\n      return;\n    }\n    const quantity = getRangeValue(this.options.rate.quantity);\n    this.emitParticles(quantity);\n  }\n  emitParticles(quantity) {\n    var _a, _b, _c;\n    const position = this.getPosition(),\n      size = this.getSize(),\n      singleParticlesOptions = itemFromSingleOrMultiple(this._particlesOptions);\n    for (let i = 0; i < quantity; i++) {\n      const particlesOptions = deepExtend({}, singleParticlesOptions);\n      if (this.spawnColor) {\n        const hslAnimation = (_a = this.options.spawnColor) === null || _a === void 0 ? void 0 : _a.animation;\n        if (hslAnimation) {\n          this.spawnColor.h = this.setColorAnimation(hslAnimation.h, this.spawnColor.h, 360);\n          this.spawnColor.s = this.setColorAnimation(hslAnimation.s, this.spawnColor.s, 100);\n          this.spawnColor.l = this.setColorAnimation(hslAnimation.l, this.spawnColor.l, 100);\n        }\n        if (!particlesOptions.color) {\n          particlesOptions.color = {\n            value: this.spawnColor\n          };\n        } else {\n          particlesOptions.color.value = this.spawnColor;\n        }\n      }\n      if (!position) {\n        return;\n      }\n      const pPosition = (_c = (_b = this._shape) === null || _b === void 0 ? void 0 : _b.randomPosition(position, size, this.fill)) !== null && _c !== void 0 ? _c : position;\n      this.container.particles.addParticle(pPosition, particlesOptions);\n    }\n  }\n  prepareToDie() {\n    var _a;\n    if (this._paused) {\n      return;\n    }\n    const duration = (_a = this.options.life) === null || _a === void 0 ? void 0 : _a.duration;\n    if (this.container.retina.reduceFactor && (this._lifeCount > 0 || this._immortal) && duration !== undefined && duration > 0) {\n      this._duration = duration * 1000;\n    }\n  }\n  setColorAnimation(animation, initValue, maxValue) {\n    var _a;\n    const container = this.container;\n    if (!animation.enable) {\n      return initValue;\n    }\n    const colorOffset = randomInRange(animation.offset),\n      delay = getRangeValue(this.options.rate.delay),\n      emitFactor = 1000 * delay / container.retina.reduceFactor,\n      colorSpeed = getRangeValue((_a = animation.speed) !== null && _a !== void 0 ? _a : 0);\n    return (initValue + colorSpeed * container.fpsLimit / emitFactor + colorOffset * 3.6) % maxValue;\n  }\n}","map":{"version":3,"names":["Vector","calcPositionOrRandomFromSizeRanged","deepExtend","getRangeValue","isPointInside","itemFromSingleOrMultiple","randomInRange","rangeColorToHsl","Emitter","EmitterSize","EmitterInstance","constructor","engine","emitters","container","options","position","_a","_b","_c","_d","_e","_f","_g","_h","_engine","_currentDuration","_currentEmitDelay","_currentSpawnDelay","_initialPosition","load","_spawnDelay","life","delay","retina","reduceFactor","calcPosition","name","_shape","emitterShapeManager","getShape","shape","fill","_firstSpawn","wait","_startParticlesAdded","particlesOptions","particles","move","direction","spawnColor","_paused","autoPlay","_particlesOptions","size","height","mode","width","_lifeCount","count","_immortal","dispatchEvent","data","emitter","play","externalPause","pause","externalPlay","getPosition","domId","element","document","getElementById","elRect","getBoundingClientRect","x","pixelRatio","y","getSize","canvas","_emitDelay","undefined","rate","prepareToDie","resize","initialPosition","origin","update","delta","emitParticles","startCount","_duration","value","destroy","emit","removeEmitter","quantity","singleParticlesOptions","i","hslAnimation","animation","h","setColorAnimation","s","l","color","pPosition","randomPosition","addParticle","duration","initValue","maxValue","enable","colorOffset","offset","emitFactor","colorSpeed","speed","fpsLimit"],"sources":["/Users/adri22/Desktop/AVA-Bot/app-web/node_modules/tsparticles-plugin-emitters/esm/EmitterInstance.js"],"sourcesContent":["import { Vector, calcPositionOrRandomFromSizeRanged, deepExtend, getRangeValue, isPointInside, itemFromSingleOrMultiple, randomInRange, rangeColorToHsl, } from \"tsparticles-engine\";\nimport { Emitter } from \"./Options/Classes/Emitter\";\nimport { EmitterSize } from \"./Options/Classes/EmitterSize\";\nexport class EmitterInstance {\n    constructor(engine, emitters, container, options, position) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        var _h;\n        this.emitters = emitters;\n        this.container = container;\n        this._engine = engine;\n        this._currentDuration = 0;\n        this._currentEmitDelay = 0;\n        this._currentSpawnDelay = 0;\n        this._initialPosition = position;\n        if (options instanceof Emitter) {\n            this.options = options;\n        }\n        else {\n            this.options = new Emitter();\n            this.options.load(options);\n        }\n        this._spawnDelay = (((_a = this.options.life.delay) !== null && _a !== void 0 ? _a : 0) * 1000) / this.container.retina.reduceFactor;\n        this.position = (_b = this._initialPosition) !== null && _b !== void 0 ? _b : this.calcPosition();\n        this.name = this.options.name;\n        this._shape = (_c = this._engine.emitterShapeManager) === null || _c === void 0 ? void 0 : _c.getShape(this.options.shape);\n        this.fill = this.options.fill;\n        this._firstSpawn = !this.options.life.wait;\n        this._startParticlesAdded = false;\n        let particlesOptions = deepExtend({}, this.options.particles);\n        particlesOptions !== null && particlesOptions !== void 0 ? particlesOptions : (particlesOptions = {});\n        (_d = particlesOptions.move) !== null && _d !== void 0 ? _d : (particlesOptions.move = {});\n        (_e = (_h = particlesOptions.move).direction) !== null && _e !== void 0 ? _e : (_h.direction = this.options.direction);\n        if (this.options.spawnColor) {\n            this.spawnColor = rangeColorToHsl(this.options.spawnColor);\n        }\n        this._paused = !this.options.autoPlay;\n        this._particlesOptions = particlesOptions;\n        this.size =\n            (_f = this.options.size) !== null && _f !== void 0 ? _f : (() => {\n                const size = new EmitterSize();\n                size.load({\n                    height: 0,\n                    mode: \"percent\",\n                    width: 0,\n                });\n                return size;\n            })();\n        this._lifeCount = (_g = this.options.life.count) !== null && _g !== void 0 ? _g : -1;\n        this._immortal = this._lifeCount <= 0;\n        this._engine.dispatchEvent(\"emitterCreated\", {\n            container,\n            data: {\n                emitter: this,\n            },\n        });\n        this.play();\n    }\n    externalPause() {\n        this._paused = true;\n        this.pause();\n    }\n    externalPlay() {\n        this._paused = false;\n        this.play();\n    }\n    getPosition() {\n        if (this.options.domId) {\n            const container = this.container, element = document.getElementById(this.options.domId);\n            if (element) {\n                const elRect = element.getBoundingClientRect();\n                return {\n                    x: (elRect.x + elRect.width / 2) * container.retina.pixelRatio,\n                    y: (elRect.y + elRect.height / 2) * container.retina.pixelRatio,\n                };\n            }\n        }\n        return this.position;\n    }\n    getSize() {\n        const container = this.container;\n        if (this.options.domId) {\n            const element = document.getElementById(this.options.domId);\n            if (element) {\n                const elRect = element.getBoundingClientRect();\n                return {\n                    width: elRect.width * container.retina.pixelRatio,\n                    height: elRect.height * container.retina.pixelRatio,\n                };\n            }\n        }\n        return {\n            width: this.size.mode === \"percent\"\n                ? (container.canvas.size.width * this.size.width) / 100\n                : this.size.width,\n            height: this.size.mode === \"percent\"\n                ? (container.canvas.size.height * this.size.height) / 100\n                : this.size.height,\n        };\n    }\n    pause() {\n        if (this._paused) {\n            return;\n        }\n        delete this._emitDelay;\n    }\n    play() {\n        var _a;\n        if (this._paused) {\n            return;\n        }\n        if (!(this.container.retina.reduceFactor &&\n            (this._lifeCount > 0 || this._immortal || !this.options.life.count) &&\n            (this._firstSpawn || this._currentSpawnDelay >= ((_a = this._spawnDelay) !== null && _a !== void 0 ? _a : 0)))) {\n            return;\n        }\n        if (this._emitDelay === undefined) {\n            const delay = getRangeValue(this.options.rate.delay);\n            this._emitDelay = (1000 * delay) / this.container.retina.reduceFactor;\n        }\n        if (this._lifeCount > 0 || this._immortal) {\n            this.prepareToDie();\n        }\n    }\n    resize() {\n        const initialPosition = this._initialPosition;\n        this.position =\n            initialPosition && isPointInside(initialPosition, this.container.canvas.size, Vector.origin)\n                ? initialPosition\n                : this.calcPosition();\n    }\n    update(delta) {\n        var _a, _b, _c;\n        if (this._paused) {\n            return;\n        }\n        if (this._firstSpawn) {\n            this._firstSpawn = false;\n            this._currentSpawnDelay = (_a = this._spawnDelay) !== null && _a !== void 0 ? _a : 0;\n            this._currentEmitDelay = (_b = this._emitDelay) !== null && _b !== void 0 ? _b : 0;\n        }\n        if (!this._startParticlesAdded) {\n            this._startParticlesAdded = true;\n            this.emitParticles(this.options.startCount);\n        }\n        if (this._duration !== undefined) {\n            this._currentDuration += delta.value;\n            if (this._currentDuration >= this._duration) {\n                this.pause();\n                if (this._spawnDelay !== undefined) {\n                    delete this._spawnDelay;\n                }\n                if (!this._immortal) {\n                    this._lifeCount--;\n                }\n                if (this._lifeCount > 0 || this._immortal) {\n                    this.position = this.calcPosition();\n                    this._spawnDelay = (((_c = this.options.life.delay) !== null && _c !== void 0 ? _c : 0) * 1000) / this.container.retina.reduceFactor;\n                }\n                else {\n                    this.destroy();\n                }\n                this._currentDuration -= this._duration;\n                delete this._duration;\n            }\n        }\n        if (this._spawnDelay !== undefined) {\n            this._currentSpawnDelay += delta.value;\n            if (this._currentSpawnDelay >= this._spawnDelay) {\n                this._engine.dispatchEvent(\"emitterPlay\", {\n                    container: this.container,\n                });\n                this.play();\n                this._currentSpawnDelay -= this._currentSpawnDelay;\n                delete this._spawnDelay;\n            }\n        }\n        if (this._emitDelay !== undefined) {\n            this._currentEmitDelay += delta.value;\n            if (this._currentEmitDelay >= this._emitDelay) {\n                this.emit();\n                this._currentEmitDelay -= this._emitDelay;\n            }\n        }\n    }\n    calcPosition() {\n        return calcPositionOrRandomFromSizeRanged({\n            size: this.container.canvas.size,\n            position: this.options.position,\n        });\n    }\n    destroy() {\n        this.emitters.removeEmitter(this);\n        this._engine.dispatchEvent(\"emitterDestroyed\", {\n            container: this.container,\n            data: {\n                emitter: this,\n            },\n        });\n    }\n    emit() {\n        if (this._paused) {\n            return;\n        }\n        const quantity = getRangeValue(this.options.rate.quantity);\n        this.emitParticles(quantity);\n    }\n    emitParticles(quantity) {\n        var _a, _b, _c;\n        const position = this.getPosition(), size = this.getSize(), singleParticlesOptions = itemFromSingleOrMultiple(this._particlesOptions);\n        for (let i = 0; i < quantity; i++) {\n            const particlesOptions = deepExtend({}, singleParticlesOptions);\n            if (this.spawnColor) {\n                const hslAnimation = (_a = this.options.spawnColor) === null || _a === void 0 ? void 0 : _a.animation;\n                if (hslAnimation) {\n                    this.spawnColor.h = this.setColorAnimation(hslAnimation.h, this.spawnColor.h, 360);\n                    this.spawnColor.s = this.setColorAnimation(hslAnimation.s, this.spawnColor.s, 100);\n                    this.spawnColor.l = this.setColorAnimation(hslAnimation.l, this.spawnColor.l, 100);\n                }\n                if (!particlesOptions.color) {\n                    particlesOptions.color = {\n                        value: this.spawnColor,\n                    };\n                }\n                else {\n                    particlesOptions.color.value = this.spawnColor;\n                }\n            }\n            if (!position) {\n                return;\n            }\n            const pPosition = (_c = (_b = this._shape) === null || _b === void 0 ? void 0 : _b.randomPosition(position, size, this.fill)) !== null && _c !== void 0 ? _c : position;\n            this.container.particles.addParticle(pPosition, particlesOptions);\n        }\n    }\n    prepareToDie() {\n        var _a;\n        if (this._paused) {\n            return;\n        }\n        const duration = (_a = this.options.life) === null || _a === void 0 ? void 0 : _a.duration;\n        if (this.container.retina.reduceFactor &&\n            (this._lifeCount > 0 || this._immortal) &&\n            duration !== undefined &&\n            duration > 0) {\n            this._duration = duration * 1000;\n        }\n    }\n    setColorAnimation(animation, initValue, maxValue) {\n        var _a;\n        const container = this.container;\n        if (!animation.enable) {\n            return initValue;\n        }\n        const colorOffset = randomInRange(animation.offset), delay = getRangeValue(this.options.rate.delay), emitFactor = (1000 * delay) / container.retina.reduceFactor, colorSpeed = getRangeValue((_a = animation.speed) !== null && _a !== void 0 ? _a : 0);\n        return (initValue + (colorSpeed * container.fpsLimit) / emitFactor + colorOffset * 3.6) % maxValue;\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}