{"ast":null,"code":"import { clamp, getRandom, getRangeMax, getRangeMin, getRangeValue, randomInRange } from \"tsparticles-engine\";\nfunction checkDestroy(particle, value, minValue, maxValue) {\n  switch (particle.options.opacity.animation.destroy) {\n    case \"max\":\n      if (value >= maxValue) {\n        particle.destroy();\n      }\n      break;\n    case \"min\":\n      if (value <= minValue) {\n        particle.destroy();\n      }\n      break;\n  }\n}\nfunction updateOpacity(particle, delta) {\n  var _a, _b, _c, _d, _e, _f;\n  if (!particle.opacity) {\n    return;\n  }\n  const minValue = particle.opacity.min,\n    maxValue = particle.opacity.max,\n    decay = (_a = particle.opacity.decay) !== null && _a !== void 0 ? _a : 1;\n  if (particle.destroyed || !particle.opacity.enable || ((_b = particle.opacity.maxLoops) !== null && _b !== void 0 ? _b : 0) > 0 && ((_c = particle.opacity.loops) !== null && _c !== void 0 ? _c : 0) > ((_d = particle.opacity.maxLoops) !== null && _d !== void 0 ? _d : 0)) {\n    return;\n  }\n  switch (particle.opacity.status) {\n    case \"increasing\":\n      if (particle.opacity.value >= maxValue) {\n        particle.opacity.status = \"decreasing\";\n        if (!particle.opacity.loops) {\n          particle.opacity.loops = 0;\n        }\n        particle.opacity.loops++;\n      } else {\n        particle.opacity.value += ((_e = particle.opacity.velocity) !== null && _e !== void 0 ? _e : 0) * delta.factor;\n      }\n      break;\n    case \"decreasing\":\n      if (particle.opacity.value <= minValue) {\n        particle.opacity.status = \"increasing\";\n        if (!particle.opacity.loops) {\n          particle.opacity.loops = 0;\n        }\n        particle.opacity.loops++;\n      } else {\n        particle.opacity.value -= ((_f = particle.opacity.velocity) !== null && _f !== void 0 ? _f : 0) * delta.factor;\n      }\n      break;\n  }\n  if (particle.opacity.velocity && particle.opacity.decay !== 1) {\n    particle.opacity.velocity *= decay;\n  }\n  checkDestroy(particle, particle.opacity.value, minValue, maxValue);\n  if (!particle.destroyed) {\n    particle.opacity.value = clamp(particle.opacity.value, minValue, maxValue);\n  }\n}\nexport class OpacityUpdater {\n  constructor(container) {\n    this.container = container;\n  }\n  init(particle) {\n    const opacityOptions = particle.options.opacity;\n    particle.opacity = {\n      enable: opacityOptions.animation.enable,\n      max: getRangeMax(opacityOptions.value),\n      min: getRangeMin(opacityOptions.value),\n      value: getRangeValue(opacityOptions.value),\n      loops: 0,\n      maxLoops: getRangeValue(opacityOptions.animation.count)\n    };\n    const opacityAnimation = opacityOptions.animation;\n    if (opacityAnimation.enable) {\n      particle.opacity.decay = 1 - getRangeValue(opacityAnimation.decay);\n      particle.opacity.status = \"increasing\";\n      const opacityRange = opacityOptions.value;\n      particle.opacity.min = getRangeMin(opacityRange);\n      particle.opacity.max = getRangeMax(opacityRange);\n      switch (opacityAnimation.startValue) {\n        case \"min\":\n          particle.opacity.value = particle.opacity.min;\n          particle.opacity.status = \"increasing\";\n          break;\n        case \"random\":\n          particle.opacity.value = randomInRange(particle.opacity);\n          particle.opacity.status = getRandom() >= 0.5 ? \"increasing\" : \"decreasing\";\n          break;\n        case \"max\":\n        default:\n          particle.opacity.value = particle.opacity.max;\n          particle.opacity.status = \"decreasing\";\n          break;\n      }\n      particle.opacity.velocity = getRangeValue(opacityAnimation.speed) / 100 * this.container.retina.reduceFactor;\n      if (!opacityAnimation.sync) {\n        particle.opacity.velocity *= getRandom();\n      }\n    }\n    particle.opacity.initialValue = particle.opacity.value;\n  }\n  isEnabled(particle) {\n    var _a, _b, _c, _d;\n    return !particle.destroyed && !particle.spawning && !!particle.opacity && particle.opacity.enable && (((_a = particle.opacity.maxLoops) !== null && _a !== void 0 ? _a : 0) <= 0 || ((_b = particle.opacity.maxLoops) !== null && _b !== void 0 ? _b : 0) > 0 && ((_c = particle.opacity.loops) !== null && _c !== void 0 ? _c : 0) < ((_d = particle.opacity.maxLoops) !== null && _d !== void 0 ? _d : 0));\n  }\n  reset(particle) {\n    if (particle.opacity) {\n      particle.opacity.loops = 0;\n    }\n  }\n  update(particle, delta) {\n    if (!this.isEnabled(particle)) {\n      return;\n    }\n    updateOpacity(particle, delta);\n  }\n}","map":{"version":3,"names":["clamp","getRandom","getRangeMax","getRangeMin","getRangeValue","randomInRange","checkDestroy","particle","value","minValue","maxValue","options","opacity","animation","destroy","updateOpacity","delta","_a","_b","_c","_d","_e","_f","min","max","decay","destroyed","enable","maxLoops","loops","status","velocity","factor","OpacityUpdater","constructor","container","init","opacityOptions","count","opacityAnimation","opacityRange","startValue","speed","retina","reduceFactor","sync","initialValue","isEnabled","spawning","reset","update"],"sources":["/Users/adri22/Desktop/AVA-Bot/app-web/node_modules/tsparticles-updater-opacity/esm/OpacityUpdater.js"],"sourcesContent":["import { clamp, getRandom, getRangeMax, getRangeMin, getRangeValue, randomInRange, } from \"tsparticles-engine\";\nfunction checkDestroy(particle, value, minValue, maxValue) {\n    switch (particle.options.opacity.animation.destroy) {\n        case \"max\":\n            if (value >= maxValue) {\n                particle.destroy();\n            }\n            break;\n        case \"min\":\n            if (value <= minValue) {\n                particle.destroy();\n            }\n            break;\n    }\n}\nfunction updateOpacity(particle, delta) {\n    var _a, _b, _c, _d, _e, _f;\n    if (!particle.opacity) {\n        return;\n    }\n    const minValue = particle.opacity.min, maxValue = particle.opacity.max, decay = (_a = particle.opacity.decay) !== null && _a !== void 0 ? _a : 1;\n    if (particle.destroyed ||\n        !particle.opacity.enable ||\n        (((_b = particle.opacity.maxLoops) !== null && _b !== void 0 ? _b : 0) > 0 && ((_c = particle.opacity.loops) !== null && _c !== void 0 ? _c : 0) > ((_d = particle.opacity.maxLoops) !== null && _d !== void 0 ? _d : 0))) {\n        return;\n    }\n    switch (particle.opacity.status) {\n        case \"increasing\":\n            if (particle.opacity.value >= maxValue) {\n                particle.opacity.status = \"decreasing\";\n                if (!particle.opacity.loops) {\n                    particle.opacity.loops = 0;\n                }\n                particle.opacity.loops++;\n            }\n            else {\n                particle.opacity.value += ((_e = particle.opacity.velocity) !== null && _e !== void 0 ? _e : 0) * delta.factor;\n            }\n            break;\n        case \"decreasing\":\n            if (particle.opacity.value <= minValue) {\n                particle.opacity.status = \"increasing\";\n                if (!particle.opacity.loops) {\n                    particle.opacity.loops = 0;\n                }\n                particle.opacity.loops++;\n            }\n            else {\n                particle.opacity.value -= ((_f = particle.opacity.velocity) !== null && _f !== void 0 ? _f : 0) * delta.factor;\n            }\n            break;\n    }\n    if (particle.opacity.velocity && particle.opacity.decay !== 1) {\n        particle.opacity.velocity *= decay;\n    }\n    checkDestroy(particle, particle.opacity.value, minValue, maxValue);\n    if (!particle.destroyed) {\n        particle.opacity.value = clamp(particle.opacity.value, minValue, maxValue);\n    }\n}\nexport class OpacityUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const opacityOptions = particle.options.opacity;\n        particle.opacity = {\n            enable: opacityOptions.animation.enable,\n            max: getRangeMax(opacityOptions.value),\n            min: getRangeMin(opacityOptions.value),\n            value: getRangeValue(opacityOptions.value),\n            loops: 0,\n            maxLoops: getRangeValue(opacityOptions.animation.count),\n        };\n        const opacityAnimation = opacityOptions.animation;\n        if (opacityAnimation.enable) {\n            particle.opacity.decay = 1 - getRangeValue(opacityAnimation.decay);\n            particle.opacity.status = \"increasing\";\n            const opacityRange = opacityOptions.value;\n            particle.opacity.min = getRangeMin(opacityRange);\n            particle.opacity.max = getRangeMax(opacityRange);\n            switch (opacityAnimation.startValue) {\n                case \"min\":\n                    particle.opacity.value = particle.opacity.min;\n                    particle.opacity.status = \"increasing\";\n                    break;\n                case \"random\":\n                    particle.opacity.value = randomInRange(particle.opacity);\n                    particle.opacity.status =\n                        getRandom() >= 0.5 ? \"increasing\" : \"decreasing\";\n                    break;\n                case \"max\":\n                default:\n                    particle.opacity.value = particle.opacity.max;\n                    particle.opacity.status = \"decreasing\";\n                    break;\n            }\n            particle.opacity.velocity =\n                (getRangeValue(opacityAnimation.speed) / 100) * this.container.retina.reduceFactor;\n            if (!opacityAnimation.sync) {\n                particle.opacity.velocity *= getRandom();\n            }\n        }\n        particle.opacity.initialValue = particle.opacity.value;\n    }\n    isEnabled(particle) {\n        var _a, _b, _c, _d;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            !!particle.opacity &&\n            particle.opacity.enable &&\n            (((_a = particle.opacity.maxLoops) !== null && _a !== void 0 ? _a : 0) <= 0 ||\n                (((_b = particle.opacity.maxLoops) !== null && _b !== void 0 ? _b : 0) > 0 &&\n                    ((_c = particle.opacity.loops) !== null && _c !== void 0 ? _c : 0) < ((_d = particle.opacity.maxLoops) !== null && _d !== void 0 ? _d : 0))));\n    }\n    reset(particle) {\n        if (particle.opacity) {\n            particle.opacity.loops = 0;\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateOpacity(particle, delta);\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}