{"ast":null,"code":"import { executeOnSingleOrMultiple, isInArray, itemFromSingleOrMultiple, loadFont } from \"tsparticles-engine\";\nexport const validTypes = [\"text\", \"character\", \"char\"];\nexport class TextDrawer {\n  draw(context, particle, radius, opacity) {\n    var _a, _b, _c;\n    const character = particle.shapeData;\n    if (character === undefined) {\n      return;\n    }\n    const textData = character.value;\n    if (textData === undefined) {\n      return;\n    }\n    const textParticle = particle;\n    if (textParticle.text === undefined) {\n      textParticle.text = itemFromSingleOrMultiple(textData, particle.randomIndexData);\n    }\n    const text = textParticle.text,\n      style = (_a = character.style) !== null && _a !== void 0 ? _a : \"\",\n      weight = (_b = character.weight) !== null && _b !== void 0 ? _b : \"400\",\n      size = Math.round(radius) * 2,\n      font = (_c = character.font) !== null && _c !== void 0 ? _c : \"Verdana\",\n      fill = particle.fill,\n      offsetX = text.length * radius / 2;\n    context.font = `${style} ${weight} ${size}px \"${font}\"`;\n    const pos = {\n      x: -offsetX,\n      y: radius / 2\n    };\n    context.globalAlpha = opacity;\n    if (fill) {\n      context.fillText(text, pos.x, pos.y);\n    } else {\n      context.strokeText(text, pos.x, pos.y);\n    }\n    context.globalAlpha = 1;\n  }\n  getSidesCount() {\n    return 12;\n  }\n  async init(container) {\n    const options = container.actualOptions;\n    if (validTypes.find(t => isInArray(t, options.particles.shape.type))) {\n      const shapeOptions = validTypes.map(t => options.particles.shape.options[t]).find(t => !!t),\n        promises = [];\n      executeOnSingleOrMultiple(shapeOptions, shape => {\n        promises.push(loadFont(shape.font, shape.weight));\n      });\n      await Promise.all(promises);\n    }\n  }\n}","map":{"version":3,"names":["executeOnSingleOrMultiple","isInArray","itemFromSingleOrMultiple","loadFont","validTypes","TextDrawer","draw","context","particle","radius","opacity","_a","_b","_c","character","shapeData","undefined","textData","value","textParticle","text","randomIndexData","style","weight","size","Math","round","font","fill","offsetX","length","pos","x","y","globalAlpha","fillText","strokeText","getSidesCount","init","container","options","actualOptions","find","t","particles","shape","type","shapeOptions","map","promises","push","Promise","all"],"sources":["/Users/adri22/Desktop/AVA-Bot/app-web/node_modules/tsparticles-shape-text/esm/TextDrawer.js"],"sourcesContent":["import { executeOnSingleOrMultiple, isInArray, itemFromSingleOrMultiple, loadFont } from \"tsparticles-engine\";\nexport const validTypes = [\"text\", \"character\", \"char\"];\nexport class TextDrawer {\n    draw(context, particle, radius, opacity) {\n        var _a, _b, _c;\n        const character = particle.shapeData;\n        if (character === undefined) {\n            return;\n        }\n        const textData = character.value;\n        if (textData === undefined) {\n            return;\n        }\n        const textParticle = particle;\n        if (textParticle.text === undefined) {\n            textParticle.text = itemFromSingleOrMultiple(textData, particle.randomIndexData);\n        }\n        const text = textParticle.text, style = (_a = character.style) !== null && _a !== void 0 ? _a : \"\", weight = (_b = character.weight) !== null && _b !== void 0 ? _b : \"400\", size = Math.round(radius) * 2, font = (_c = character.font) !== null && _c !== void 0 ? _c : \"Verdana\", fill = particle.fill, offsetX = (text.length * radius) / 2;\n        context.font = `${style} ${weight} ${size}px \"${font}\"`;\n        const pos = {\n            x: -offsetX,\n            y: radius / 2,\n        };\n        context.globalAlpha = opacity;\n        if (fill) {\n            context.fillText(text, pos.x, pos.y);\n        }\n        else {\n            context.strokeText(text, pos.x, pos.y);\n        }\n        context.globalAlpha = 1;\n    }\n    getSidesCount() {\n        return 12;\n    }\n    async init(container) {\n        const options = container.actualOptions;\n        if (validTypes.find((t) => isInArray(t, options.particles.shape.type))) {\n            const shapeOptions = validTypes\n                .map((t) => options.particles.shape.options[t])\n                .find((t) => !!t), promises = [];\n            executeOnSingleOrMultiple(shapeOptions, (shape) => {\n                promises.push(loadFont(shape.font, shape.weight));\n            });\n            await Promise.all(promises);\n        }\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}