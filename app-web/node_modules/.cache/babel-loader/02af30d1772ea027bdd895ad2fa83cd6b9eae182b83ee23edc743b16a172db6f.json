{"ast":null,"code":"import { getHslAnimationFromHsl, randomInRange, rangeColorToHsl } from \"tsparticles-engine\";\nfunction updateColorValue(delta, value, valueAnimation, max, decrease) {\n  var _a, _b;\n  const colorValue = value;\n  if (!colorValue || !valueAnimation.enable || colorValue.loops !== undefined && colorValue.maxLoops !== undefined && colorValue.maxLoops > 0 && colorValue.loops >= colorValue.maxLoops) {\n    return;\n  }\n  const offset = randomInRange(valueAnimation.offset),\n    velocity = ((_a = value.velocity) !== null && _a !== void 0 ? _a : 0) * delta.factor + offset * 3.6,\n    decay = (_b = value.decay) !== null && _b !== void 0 ? _b : 1;\n  if (!decrease || colorValue.status === \"increasing\") {\n    colorValue.value += velocity;\n    if (colorValue.value > max) {\n      if (!colorValue.loops) {\n        colorValue.loops = 0;\n      }\n      colorValue.loops++;\n      if (decrease) {\n        colorValue.status = \"decreasing\";\n        colorValue.value -= colorValue.value % max;\n      }\n    }\n  } else {\n    colorValue.value -= velocity;\n    if (colorValue.value < 0) {\n      if (!colorValue.loops) {\n        colorValue.loops = 0;\n      }\n      colorValue.loops++;\n      colorValue.status = \"increasing\";\n      colorValue.value += colorValue.value;\n    }\n  }\n  if (colorValue.velocity && decay !== 1) {\n    colorValue.velocity *= decay;\n  }\n  if (colorValue.value > max) {\n    colorValue.value %= max;\n  }\n}\nfunction updateColor(particle, delta) {\n  var _a, _b, _c;\n  const animationOptions = particle.options.color.animation;\n  const h = (_a = particle.color) === null || _a === void 0 ? void 0 : _a.h,\n    s = (_b = particle.color) === null || _b === void 0 ? void 0 : _b.s,\n    l = (_c = particle.color) === null || _c === void 0 ? void 0 : _c.l;\n  if (h) {\n    updateColorValue(delta, h, animationOptions.h, 360, false);\n  }\n  if (s) {\n    updateColorValue(delta, s, animationOptions.s, 100, true);\n  }\n  if (l) {\n    updateColorValue(delta, l, animationOptions.l, 100, true);\n  }\n}\nexport class ColorUpdater {\n  constructor(container) {\n    this.container = container;\n  }\n  init(particle) {\n    const hslColor = rangeColorToHsl(particle.options.color, particle.id, particle.options.reduceDuplicates);\n    if (hslColor) {\n      particle.color = getHslAnimationFromHsl(hslColor, particle.options.color.animation, this.container.retina.reduceFactor);\n    }\n  }\n  isEnabled(particle) {\n    var _a, _b, _c;\n    const animationOptions = particle.options.color.animation;\n    return !particle.destroyed && !particle.spawning && (((_a = particle.color) === null || _a === void 0 ? void 0 : _a.h.value) !== undefined && animationOptions.h.enable || ((_b = particle.color) === null || _b === void 0 ? void 0 : _b.s.value) !== undefined && animationOptions.s.enable || ((_c = particle.color) === null || _c === void 0 ? void 0 : _c.l.value) !== undefined && animationOptions.l.enable);\n  }\n  update(particle, delta) {\n    updateColor(particle, delta);\n  }\n}","map":{"version":3,"names":["getHslAnimationFromHsl","randomInRange","rangeColorToHsl","updateColorValue","delta","value","valueAnimation","max","decrease","_a","_b","colorValue","enable","loops","undefined","maxLoops","offset","velocity","factor","decay","status","updateColor","particle","_c","animationOptions","options","color","animation","h","s","l","ColorUpdater","constructor","container","init","hslColor","id","reduceDuplicates","retina","reduceFactor","isEnabled","destroyed","spawning","update"],"sources":["/Users/adri22/Desktop/AVA-Bot/app-web/node_modules/tsparticles-updater-color/esm/ColorUpdater.js"],"sourcesContent":["import { getHslAnimationFromHsl, randomInRange, rangeColorToHsl } from \"tsparticles-engine\";\nfunction updateColorValue(delta, value, valueAnimation, max, decrease) {\n    var _a, _b;\n    const colorValue = value;\n    if (!colorValue ||\n        !valueAnimation.enable ||\n        (colorValue.loops !== undefined &&\n            colorValue.maxLoops !== undefined &&\n            colorValue.maxLoops > 0 &&\n            colorValue.loops >= colorValue.maxLoops)) {\n        return;\n    }\n    const offset = randomInRange(valueAnimation.offset), velocity = ((_a = value.velocity) !== null && _a !== void 0 ? _a : 0) * delta.factor + offset * 3.6, decay = (_b = value.decay) !== null && _b !== void 0 ? _b : 1;\n    if (!decrease || colorValue.status === \"increasing\") {\n        colorValue.value += velocity;\n        if (colorValue.value > max) {\n            if (!colorValue.loops) {\n                colorValue.loops = 0;\n            }\n            colorValue.loops++;\n            if (decrease) {\n                colorValue.status = \"decreasing\";\n                colorValue.value -= colorValue.value % max;\n            }\n        }\n    }\n    else {\n        colorValue.value -= velocity;\n        if (colorValue.value < 0) {\n            if (!colorValue.loops) {\n                colorValue.loops = 0;\n            }\n            colorValue.loops++;\n            colorValue.status = \"increasing\";\n            colorValue.value += colorValue.value;\n        }\n    }\n    if (colorValue.velocity && decay !== 1) {\n        colorValue.velocity *= decay;\n    }\n    if (colorValue.value > max) {\n        colorValue.value %= max;\n    }\n}\nfunction updateColor(particle, delta) {\n    var _a, _b, _c;\n    const animationOptions = particle.options.color.animation;\n    const h = (_a = particle.color) === null || _a === void 0 ? void 0 : _a.h, s = (_b = particle.color) === null || _b === void 0 ? void 0 : _b.s, l = (_c = particle.color) === null || _c === void 0 ? void 0 : _c.l;\n    if (h) {\n        updateColorValue(delta, h, animationOptions.h, 360, false);\n    }\n    if (s) {\n        updateColorValue(delta, s, animationOptions.s, 100, true);\n    }\n    if (l) {\n        updateColorValue(delta, l, animationOptions.l, 100, true);\n    }\n}\nexport class ColorUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const hslColor = rangeColorToHsl(particle.options.color, particle.id, particle.options.reduceDuplicates);\n        if (hslColor) {\n            particle.color = getHslAnimationFromHsl(hslColor, particle.options.color.animation, this.container.retina.reduceFactor);\n        }\n    }\n    isEnabled(particle) {\n        var _a, _b, _c;\n        const animationOptions = particle.options.color.animation;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            ((((_a = particle.color) === null || _a === void 0 ? void 0 : _a.h.value) !== undefined && animationOptions.h.enable) ||\n                (((_b = particle.color) === null || _b === void 0 ? void 0 : _b.s.value) !== undefined && animationOptions.s.enable) ||\n                (((_c = particle.color) === null || _c === void 0 ? void 0 : _c.l.value) !== undefined && animationOptions.l.enable)));\n    }\n    update(particle, delta) {\n        updateColor(particle, delta);\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}