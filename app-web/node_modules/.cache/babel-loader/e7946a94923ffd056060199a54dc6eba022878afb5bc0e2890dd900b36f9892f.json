{"ast":null,"code":"import { Container } from \"./Container\";\nimport { generatedAttribute } from \"./Utils/Constants\";\nimport { getRandom } from \"../Utils/NumberUtils\";\nimport { itemFromSingleOrMultiple } from \"../Utils/Utils\";\nasync function getDataFromUrl(jsonUrl, index) {\n  const url = itemFromSingleOrMultiple(jsonUrl, index);\n  if (!url) {\n    return;\n  }\n  const response = await fetch(url);\n  if (response.ok) {\n    return response.json();\n  }\n  console.error(`tsParticles - Error ${response.status} while retrieving config file`);\n}\nexport class Loader {\n  constructor(engine) {\n    this._engine = engine;\n  }\n  load(tagId, options, index) {\n    const params = {\n      index,\n      remote: false\n    };\n    if (typeof tagId === \"string\") {\n      params.tagId = tagId;\n    } else {\n      params.options = tagId;\n    }\n    if (typeof options === \"number\") {\n      params.index = options;\n    } else {\n      params.options = options !== null && options !== void 0 ? options : params.options;\n    }\n    return this.loadOptions(params);\n  }\n  async loadJSON(tagId, jsonUrl, index) {\n    let url, id;\n    if (typeof jsonUrl === \"number\" || jsonUrl === undefined) {\n      url = tagId;\n    } else {\n      id = tagId;\n      url = jsonUrl;\n    }\n    return this.loadRemoteOptions({\n      tagId: id,\n      url,\n      index,\n      remote: true\n    });\n  }\n  async loadOptions(params) {\n    var _a, _b, _c;\n    const tagId = (_a = params.tagId) !== null && _a !== void 0 ? _a : `tsparticles${Math.floor(getRandom() * 10000)}`,\n      {\n        index,\n        url: jsonUrl,\n        remote\n      } = params,\n      options = remote ? await getDataFromUrl(jsonUrl, index) : params.options;\n    let domContainer = (_b = params.element) !== null && _b !== void 0 ? _b : document.getElementById(tagId);\n    if (!domContainer) {\n      domContainer = document.createElement(\"div\");\n      domContainer.id = tagId;\n      (_c = document.querySelector(\"body\")) === null || _c === void 0 ? void 0 : _c.append(domContainer);\n    }\n    const currentOptions = itemFromSingleOrMultiple(options, index),\n      dom = this._engine.dom(),\n      oldIndex = dom.findIndex(v => v.id === tagId);\n    if (oldIndex >= 0) {\n      const old = this._engine.domItem(oldIndex);\n      if (old && !old.destroyed) {\n        old.destroy();\n        dom.splice(oldIndex, 1);\n      }\n    }\n    let canvasEl;\n    if (domContainer.tagName.toLowerCase() === \"canvas\") {\n      canvasEl = domContainer;\n      canvasEl.dataset[generatedAttribute] = \"false\";\n    } else {\n      const existingCanvases = domContainer.getElementsByTagName(\"canvas\");\n      if (existingCanvases.length) {\n        canvasEl = existingCanvases[0];\n        canvasEl.dataset[generatedAttribute] = \"false\";\n      } else {\n        canvasEl = document.createElement(\"canvas\");\n        canvasEl.dataset[generatedAttribute] = \"true\";\n        domContainer.appendChild(canvasEl);\n      }\n    }\n    if (!canvasEl.style.width) {\n      canvasEl.style.width = \"100%\";\n    }\n    if (!canvasEl.style.height) {\n      canvasEl.style.height = \"100%\";\n    }\n    const newItem = new Container(this._engine, tagId, currentOptions);\n    if (oldIndex >= 0) {\n      dom.splice(oldIndex, 0, newItem);\n    } else {\n      dom.push(newItem);\n    }\n    newItem.canvas.loadCanvas(canvasEl);\n    await newItem.start();\n    return newItem;\n  }\n  async loadRemoteOptions(params) {\n    return this.loadOptions(params);\n  }\n  async set(id, domContainer, options, index) {\n    const params = {\n      index,\n      remote: false\n    };\n    if (typeof id === \"string\") {\n      params.tagId = id;\n    } else {\n      params.element = id;\n    }\n    if (domContainer instanceof HTMLElement) {\n      params.element = domContainer;\n    } else {\n      params.options = domContainer;\n    }\n    if (typeof options === \"number\") {\n      params.index = options;\n    } else {\n      params.options = options !== null && options !== void 0 ? options : params.options;\n    }\n    return this.loadOptions(params);\n  }\n  async setJSON(id, domContainer, jsonUrl, index) {\n    let url, newId, newIndex, element;\n    if (id instanceof HTMLElement) {\n      element = id;\n      url = domContainer;\n      newIndex = jsonUrl;\n    } else {\n      newId = id;\n      element = domContainer;\n      url = jsonUrl;\n      newIndex = index;\n    }\n    return this.loadRemoteOptions({\n      tagId: newId,\n      url,\n      index: newIndex,\n      element,\n      remote: true\n    });\n  }\n}","map":{"version":3,"names":["Container","generatedAttribute","getRandom","itemFromSingleOrMultiple","getDataFromUrl","jsonUrl","index","url","response","fetch","ok","json","console","error","status","Loader","constructor","engine","_engine","load","tagId","options","params","remote","loadOptions","loadJSON","id","undefined","loadRemoteOptions","_a","_b","_c","Math","floor","domContainer","element","document","getElementById","createElement","querySelector","append","currentOptions","dom","oldIndex","findIndex","v","old","domItem","destroyed","destroy","splice","canvasEl","tagName","toLowerCase","dataset","existingCanvases","getElementsByTagName","length","appendChild","style","width","height","newItem","push","canvas","loadCanvas","start","set","HTMLElement","setJSON","newId","newIndex"],"sources":["/Users/adri22/Desktop/AVA-Bot/app-web/node_modules/tsparticles-engine/esm/Core/Loader.js"],"sourcesContent":["import { Container } from \"./Container\";\nimport { generatedAttribute } from \"./Utils/Constants\";\nimport { getRandom } from \"../Utils/NumberUtils\";\nimport { itemFromSingleOrMultiple } from \"../Utils/Utils\";\nasync function getDataFromUrl(jsonUrl, index) {\n    const url = itemFromSingleOrMultiple(jsonUrl, index);\n    if (!url) {\n        return;\n    }\n    const response = await fetch(url);\n    if (response.ok) {\n        return response.json();\n    }\n    console.error(`tsParticles - Error ${response.status} while retrieving config file`);\n}\nexport class Loader {\n    constructor(engine) {\n        this._engine = engine;\n    }\n    load(tagId, options, index) {\n        const params = { index, remote: false };\n        if (typeof tagId === \"string\") {\n            params.tagId = tagId;\n        }\n        else {\n            params.options = tagId;\n        }\n        if (typeof options === \"number\") {\n            params.index = options;\n        }\n        else {\n            params.options = options !== null && options !== void 0 ? options : params.options;\n        }\n        return this.loadOptions(params);\n    }\n    async loadJSON(tagId, jsonUrl, index) {\n        let url, id;\n        if (typeof jsonUrl === \"number\" || jsonUrl === undefined) {\n            url = tagId;\n        }\n        else {\n            id = tagId;\n            url = jsonUrl;\n        }\n        return this.loadRemoteOptions({ tagId: id, url, index, remote: true });\n    }\n    async loadOptions(params) {\n        var _a, _b, _c;\n        const tagId = (_a = params.tagId) !== null && _a !== void 0 ? _a : `tsparticles${Math.floor(getRandom() * 10000)}`, { index, url: jsonUrl, remote } = params, options = remote ? await getDataFromUrl(jsonUrl, index) : params.options;\n        let domContainer = (_b = params.element) !== null && _b !== void 0 ? _b : document.getElementById(tagId);\n        if (!domContainer) {\n            domContainer = document.createElement(\"div\");\n            domContainer.id = tagId;\n            (_c = document.querySelector(\"body\")) === null || _c === void 0 ? void 0 : _c.append(domContainer);\n        }\n        const currentOptions = itemFromSingleOrMultiple(options, index), dom = this._engine.dom(), oldIndex = dom.findIndex((v) => v.id === tagId);\n        if (oldIndex >= 0) {\n            const old = this._engine.domItem(oldIndex);\n            if (old && !old.destroyed) {\n                old.destroy();\n                dom.splice(oldIndex, 1);\n            }\n        }\n        let canvasEl;\n        if (domContainer.tagName.toLowerCase() === \"canvas\") {\n            canvasEl = domContainer;\n            canvasEl.dataset[generatedAttribute] = \"false\";\n        }\n        else {\n            const existingCanvases = domContainer.getElementsByTagName(\"canvas\");\n            if (existingCanvases.length) {\n                canvasEl = existingCanvases[0];\n                canvasEl.dataset[generatedAttribute] = \"false\";\n            }\n            else {\n                canvasEl = document.createElement(\"canvas\");\n                canvasEl.dataset[generatedAttribute] = \"true\";\n                domContainer.appendChild(canvasEl);\n            }\n        }\n        if (!canvasEl.style.width) {\n            canvasEl.style.width = \"100%\";\n        }\n        if (!canvasEl.style.height) {\n            canvasEl.style.height = \"100%\";\n        }\n        const newItem = new Container(this._engine, tagId, currentOptions);\n        if (oldIndex >= 0) {\n            dom.splice(oldIndex, 0, newItem);\n        }\n        else {\n            dom.push(newItem);\n        }\n        newItem.canvas.loadCanvas(canvasEl);\n        await newItem.start();\n        return newItem;\n    }\n    async loadRemoteOptions(params) {\n        return this.loadOptions(params);\n    }\n    async set(id, domContainer, options, index) {\n        const params = { index, remote: false };\n        if (typeof id === \"string\") {\n            params.tagId = id;\n        }\n        else {\n            params.element = id;\n        }\n        if (domContainer instanceof HTMLElement) {\n            params.element = domContainer;\n        }\n        else {\n            params.options = domContainer;\n        }\n        if (typeof options === \"number\") {\n            params.index = options;\n        }\n        else {\n            params.options = options !== null && options !== void 0 ? options : params.options;\n        }\n        return this.loadOptions(params);\n    }\n    async setJSON(id, domContainer, jsonUrl, index) {\n        let url, newId, newIndex, element;\n        if (id instanceof HTMLElement) {\n            element = id;\n            url = domContainer;\n            newIndex = jsonUrl;\n        }\n        else {\n            newId = id;\n            element = domContainer;\n            url = jsonUrl;\n            newIndex = index;\n        }\n        return this.loadRemoteOptions({ tagId: newId, url, index: newIndex, element, remote: true });\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}