"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.loadPolygonShape = exports.loadTriangleShape = exports.loadGenericPolygonShape = void 0;
const PolygonDrawer_1 = require("./PolygonDrawer");
const TriangleDrawer_1 = require("./TriangleDrawer");
function loadGenericPolygonShape(engine) {
    return __awaiter(this, void 0, void 0, function* () {
        yield engine.addShape("polygon", new PolygonDrawer_1.PolygonDrawer());
    });
}
exports.loadGenericPolygonShape = loadGenericPolygonShape;
function loadTriangleShape(engine) {
    return __awaiter(this, void 0, void 0, function* () {
        yield engine.addShape("triangle", new TriangleDrawer_1.TriangleDrawer());
    });
}
exports.loadTriangleShape = loadTriangleShape;
function loadPolygonShape(engine) {
    return __awaiter(this, void 0, void 0, function* () {
        yield loadGenericPolygonShape(engine);
        yield loadTriangleShape(engine);
    });
}
exports.loadPolygonShape = loadPolygonShape;
