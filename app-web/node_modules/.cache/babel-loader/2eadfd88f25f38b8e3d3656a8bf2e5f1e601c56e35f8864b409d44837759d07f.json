{"ast":null,"code":"export class Vector3d {\n  constructor(xOrCoords, y, z) {\n    if (typeof xOrCoords !== \"number\" && xOrCoords) {\n      this.x = xOrCoords.x;\n      this.y = xOrCoords.y;\n      const coords3d = xOrCoords;\n      this.z = coords3d.z ? coords3d.z : 0;\n    } else if (xOrCoords !== undefined && y !== undefined) {\n      this.x = xOrCoords;\n      this.y = y;\n      this.z = z !== null && z !== void 0 ? z : 0;\n    } else {\n      throw new Error(\"tsParticles - Vector3d not initialized correctly\");\n    }\n  }\n  static get origin() {\n    return Vector3d.create(0, 0, 0);\n  }\n  get angle() {\n    return Math.atan2(this.y, this.x);\n  }\n  set angle(angle) {\n    this.updateFromAngle(angle, this.length);\n  }\n  get length() {\n    return Math.sqrt(this.getLengthSq());\n  }\n  set length(length) {\n    this.updateFromAngle(this.angle, length);\n  }\n  static clone(source) {\n    return Vector3d.create(source.x, source.y, source.z);\n  }\n  static create(x, y, z) {\n    return new Vector3d(x, y, z);\n  }\n  add(v) {\n    return Vector3d.create(this.x + v.x, this.y + v.y, this.z + v.z);\n  }\n  addTo(v) {\n    this.x += v.x;\n    this.y += v.y;\n    this.z += v.z;\n  }\n  copy() {\n    return Vector3d.clone(this);\n  }\n  distanceTo(v) {\n    return this.sub(v).length;\n  }\n  distanceToSq(v) {\n    return this.sub(v).getLengthSq();\n  }\n  div(n) {\n    return Vector3d.create(this.x / n, this.y / n, this.z / n);\n  }\n  divTo(n) {\n    this.x /= n;\n    this.y /= n;\n    this.z /= n;\n  }\n  getLengthSq() {\n    return this.x ** 2 + this.y ** 2;\n  }\n  mult(n) {\n    return Vector3d.create(this.x * n, this.y * n, this.z * n);\n  }\n  multTo(n) {\n    this.x *= n;\n    this.y *= n;\n    this.z *= n;\n  }\n  rotate(angle) {\n    return Vector3d.create(this.x * Math.cos(angle) - this.y * Math.sin(angle), this.x * Math.sin(angle) + this.y * Math.cos(angle), 0);\n  }\n  setTo(c) {\n    this.x = c.x;\n    this.y = c.y;\n    const v3d = c;\n    this.z = v3d.z ? v3d.z : 0;\n  }\n  sub(v) {\n    return Vector3d.create(this.x - v.x, this.y - v.y, this.z - v.z);\n  }\n  subFrom(v) {\n    this.x -= v.x;\n    this.y -= v.y;\n    this.z -= v.z;\n  }\n  updateFromAngle(angle, length) {\n    this.x = Math.cos(angle) * length;\n    this.y = Math.sin(angle) * length;\n  }\n}","map":{"version":3,"names":["Vector3d","constructor","xOrCoords","y","z","x","coords3d","undefined","Error","origin","create","angle","Math","atan2","updateFromAngle","length","sqrt","getLengthSq","clone","source","add","v","addTo","copy","distanceTo","sub","distanceToSq","div","n","divTo","mult","multTo","rotate","cos","sin","setTo","c","v3d","subFrom"],"sources":["/Users/adri22/Desktop/AVA-Bot/app-web/node_modules/tsparticles-engine/esm/Core/Utils/Vector3d.js"],"sourcesContent":["export class Vector3d {\n    constructor(xOrCoords, y, z) {\n        if (typeof xOrCoords !== \"number\" && xOrCoords) {\n            this.x = xOrCoords.x;\n            this.y = xOrCoords.y;\n            const coords3d = xOrCoords;\n            this.z = coords3d.z ? coords3d.z : 0;\n        }\n        else if (xOrCoords !== undefined && y !== undefined) {\n            this.x = xOrCoords;\n            this.y = y;\n            this.z = z !== null && z !== void 0 ? z : 0;\n        }\n        else {\n            throw new Error(\"tsParticles - Vector3d not initialized correctly\");\n        }\n    }\n    static get origin() {\n        return Vector3d.create(0, 0, 0);\n    }\n    get angle() {\n        return Math.atan2(this.y, this.x);\n    }\n    set angle(angle) {\n        this.updateFromAngle(angle, this.length);\n    }\n    get length() {\n        return Math.sqrt(this.getLengthSq());\n    }\n    set length(length) {\n        this.updateFromAngle(this.angle, length);\n    }\n    static clone(source) {\n        return Vector3d.create(source.x, source.y, source.z);\n    }\n    static create(x, y, z) {\n        return new Vector3d(x, y, z);\n    }\n    add(v) {\n        return Vector3d.create(this.x + v.x, this.y + v.y, this.z + v.z);\n    }\n    addTo(v) {\n        this.x += v.x;\n        this.y += v.y;\n        this.z += v.z;\n    }\n    copy() {\n        return Vector3d.clone(this);\n    }\n    distanceTo(v) {\n        return this.sub(v).length;\n    }\n    distanceToSq(v) {\n        return this.sub(v).getLengthSq();\n    }\n    div(n) {\n        return Vector3d.create(this.x / n, this.y / n, this.z / n);\n    }\n    divTo(n) {\n        this.x /= n;\n        this.y /= n;\n        this.z /= n;\n    }\n    getLengthSq() {\n        return this.x ** 2 + this.y ** 2;\n    }\n    mult(n) {\n        return Vector3d.create(this.x * n, this.y * n, this.z * n);\n    }\n    multTo(n) {\n        this.x *= n;\n        this.y *= n;\n        this.z *= n;\n    }\n    rotate(angle) {\n        return Vector3d.create(this.x * Math.cos(angle) - this.y * Math.sin(angle), this.x * Math.sin(angle) + this.y * Math.cos(angle), 0);\n    }\n    setTo(c) {\n        this.x = c.x;\n        this.y = c.y;\n        const v3d = c;\n        this.z = v3d.z ? v3d.z : 0;\n    }\n    sub(v) {\n        return Vector3d.create(this.x - v.x, this.y - v.y, this.z - v.z);\n    }\n    subFrom(v) {\n        this.x -= v.x;\n        this.y -= v.y;\n        this.z -= v.z;\n    }\n    updateFromAngle(angle, length) {\n        this.x = Math.cos(angle) * length;\n        this.y = Math.sin(angle) * length;\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}