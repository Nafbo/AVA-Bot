import type { BubbleContainer, BubbleMode, IBubbleMode } from "./Types";
import { ClickMode, ExternalInteractorBase } from "tsparticles-engine";
import type { IDelta, IModes, Modes, Particle, RecursivePartial } from "tsparticles-engine";
export declare class Bubbler extends ExternalInteractorBase<BubbleContainer> {
    handleClickMode: (mode: ClickMode | string) => void;
    constructor(container: BubbleContainer);
    clear(particle: Particle, delta: IDelta, force?: boolean): void;
    init(): void;
    interact(delta: IDelta): Promise<void>;
    isEnabled(particle?: Particle): boolean;
    loadModeOptions(options: Modes & BubbleMode, ...sources: RecursivePartial<(IModes & IBubbleMode) | undefined>[]): void;
    reset(particle: Particle): void;
    private clickBubble;
    private hoverBubble;
    private hoverBubbleColor;
    private hoverBubbleOpacity;
    private hoverBubbleSize;
    private process;
    private singleSelectorHover;
}
