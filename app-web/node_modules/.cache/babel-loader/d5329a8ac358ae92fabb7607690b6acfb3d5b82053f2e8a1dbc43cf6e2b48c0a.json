{"ast":null,"code":"import { Circle, Rectangle } from \"tsparticles-engine\";\nexport class CircleWarp extends Circle {\n  constructor(x, y, radius, canvasSize) {\n    super(x, y, radius);\n    this.canvasSize = canvasSize;\n    this.canvasSize = Object.assign({}, canvasSize);\n  }\n  contains(point) {\n    if (super.contains(point)) {\n      return true;\n    }\n    const posNE = {\n      x: point.x - this.canvasSize.width,\n      y: point.y\n    };\n    if (super.contains(posNE)) {\n      return true;\n    }\n    const posSE = {\n      x: point.x - this.canvasSize.width,\n      y: point.y - this.canvasSize.height\n    };\n    if (super.contains(posSE)) {\n      return true;\n    }\n    const posSW = {\n      x: point.x,\n      y: point.y - this.canvasSize.height\n    };\n    return super.contains(posSW);\n  }\n  intersects(range) {\n    if (super.intersects(range)) {\n      return true;\n    }\n    const rect = range,\n      circle = range,\n      newPos = {\n        x: range.position.x - this.canvasSize.width,\n        y: range.position.y - this.canvasSize.height\n      };\n    if (circle.radius !== undefined) {\n      const biggerCircle = new Circle(newPos.x, newPos.y, circle.radius * 2);\n      return super.intersects(biggerCircle);\n    } else if (rect.size !== undefined) {\n      const rectSW = new Rectangle(newPos.x, newPos.y, rect.size.width * 2, rect.size.height * 2);\n      return super.intersects(rectSW);\n    }\n    return false;\n  }\n}","map":{"version":3,"names":["Circle","Rectangle","CircleWarp","constructor","x","y","radius","canvasSize","Object","assign","contains","point","posNE","width","posSE","height","posSW","intersects","range","rect","circle","newPos","position","undefined","biggerCircle","size","rectSW"],"sources":["/Users/adri22/Desktop/AVA-Bot/app-web/node_modules/tsparticles-interaction-particles-links/esm/CircleWarp.js"],"sourcesContent":["import { Circle, Rectangle } from \"tsparticles-engine\";\nexport class CircleWarp extends Circle {\n    constructor(x, y, radius, canvasSize) {\n        super(x, y, radius);\n        this.canvasSize = canvasSize;\n        this.canvasSize = Object.assign({}, canvasSize);\n    }\n    contains(point) {\n        if (super.contains(point)) {\n            return true;\n        }\n        const posNE = {\n            x: point.x - this.canvasSize.width,\n            y: point.y,\n        };\n        if (super.contains(posNE)) {\n            return true;\n        }\n        const posSE = {\n            x: point.x - this.canvasSize.width,\n            y: point.y - this.canvasSize.height,\n        };\n        if (super.contains(posSE)) {\n            return true;\n        }\n        const posSW = {\n            x: point.x,\n            y: point.y - this.canvasSize.height,\n        };\n        return super.contains(posSW);\n    }\n    intersects(range) {\n        if (super.intersects(range)) {\n            return true;\n        }\n        const rect = range, circle = range, newPos = {\n            x: range.position.x - this.canvasSize.width,\n            y: range.position.y - this.canvasSize.height,\n        };\n        if (circle.radius !== undefined) {\n            const biggerCircle = new Circle(newPos.x, newPos.y, circle.radius * 2);\n            return super.intersects(biggerCircle);\n        }\n        else if (rect.size !== undefined) {\n            const rectSW = new Rectangle(newPos.x, newPos.y, rect.size.width * 2, rect.size.height * 2);\n            return super.intersects(rectSW);\n        }\n        return false;\n    }\n}\n"],"mappings":"AAAA,SAASA,MAAM,EAAEC,SAAS,QAAQ,oBAAoB;AACtD,OAAO,MAAMC,UAAU,SAASF,MAAM,CAAC;EACnCG,WAAWA,CAACC,CAAC,EAAEC,CAAC,EAAEC,MAAM,EAAEC,UAAU,EAAE;IAClC,KAAK,CAACH,CAAC,EAAEC,CAAC,EAAEC,MAAM,CAAC;IACnB,IAAI,CAACC,UAAU,GAAGA,UAAU;IAC5B,IAAI,CAACA,UAAU,GAAGC,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEF,UAAU,CAAC;EACnD;EACAG,QAAQA,CAACC,KAAK,EAAE;IACZ,IAAI,KAAK,CAACD,QAAQ,CAACC,KAAK,CAAC,EAAE;MACvB,OAAO,IAAI;IACf;IACA,MAAMC,KAAK,GAAG;MACVR,CAAC,EAAEO,KAAK,CAACP,CAAC,GAAG,IAAI,CAACG,UAAU,CAACM,KAAK;MAClCR,CAAC,EAAEM,KAAK,CAACN;IACb,CAAC;IACD,IAAI,KAAK,CAACK,QAAQ,CAACE,KAAK,CAAC,EAAE;MACvB,OAAO,IAAI;IACf;IACA,MAAME,KAAK,GAAG;MACVV,CAAC,EAAEO,KAAK,CAACP,CAAC,GAAG,IAAI,CAACG,UAAU,CAACM,KAAK;MAClCR,CAAC,EAAEM,KAAK,CAACN,CAAC,GAAG,IAAI,CAACE,UAAU,CAACQ;IACjC,CAAC;IACD,IAAI,KAAK,CAACL,QAAQ,CAACI,KAAK,CAAC,EAAE;MACvB,OAAO,IAAI;IACf;IACA,MAAME,KAAK,GAAG;MACVZ,CAAC,EAAEO,KAAK,CAACP,CAAC;MACVC,CAAC,EAAEM,KAAK,CAACN,CAAC,GAAG,IAAI,CAACE,UAAU,CAACQ;IACjC,CAAC;IACD,OAAO,KAAK,CAACL,QAAQ,CAACM,KAAK,CAAC;EAChC;EACAC,UAAUA,CAACC,KAAK,EAAE;IACd,IAAI,KAAK,CAACD,UAAU,CAACC,KAAK,CAAC,EAAE;MACzB,OAAO,IAAI;IACf;IACA,MAAMC,IAAI,GAAGD,KAAK;MAAEE,MAAM,GAAGF,KAAK;MAAEG,MAAM,GAAG;QACzCjB,CAAC,EAAEc,KAAK,CAACI,QAAQ,CAAClB,CAAC,GAAG,IAAI,CAACG,UAAU,CAACM,KAAK;QAC3CR,CAAC,EAAEa,KAAK,CAACI,QAAQ,CAACjB,CAAC,GAAG,IAAI,CAACE,UAAU,CAACQ;MAC1C,CAAC;IACD,IAAIK,MAAM,CAACd,MAAM,KAAKiB,SAAS,EAAE;MAC7B,MAAMC,YAAY,GAAG,IAAIxB,MAAM,CAACqB,MAAM,CAACjB,CAAC,EAAEiB,MAAM,CAAChB,CAAC,EAAEe,MAAM,CAACd,MAAM,GAAG,CAAC,CAAC;MACtE,OAAO,KAAK,CAACW,UAAU,CAACO,YAAY,CAAC;IACzC,CAAC,MACI,IAAIL,IAAI,CAACM,IAAI,KAAKF,SAAS,EAAE;MAC9B,MAAMG,MAAM,GAAG,IAAIzB,SAAS,CAACoB,MAAM,CAACjB,CAAC,EAAEiB,MAAM,CAAChB,CAAC,EAAEc,IAAI,CAACM,IAAI,CAACZ,KAAK,GAAG,CAAC,EAAEM,IAAI,CAACM,IAAI,CAACV,MAAM,GAAG,CAAC,CAAC;MAC3F,OAAO,KAAK,CAACE,UAAU,CAACS,MAAM,CAAC;IACnC;IACA,OAAO,KAAK;EAChB;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}