{"ast":null,"code":"import { getRangeValue } from \"../Utils/NumberUtils\";\nimport { isSsr } from \"../Utils/Utils\";\nexport class Retina {\n  constructor(container) {\n    this.container = container;\n  }\n  init() {\n    const container = this.container,\n      options = container.actualOptions;\n    this.pixelRatio = !options.detectRetina || isSsr() ? 1 : window.devicePixelRatio;\n    this.reduceFactor = 1;\n    const ratio = this.pixelRatio;\n    if (container.canvas.element) {\n      const element = container.canvas.element;\n      container.canvas.size.width = element.offsetWidth * ratio;\n      container.canvas.size.height = element.offsetHeight * ratio;\n    }\n    const particles = options.particles;\n    this.attractDistance = getRangeValue(particles.move.attract.distance) * ratio;\n    this.sizeAnimationSpeed = getRangeValue(particles.size.animation.speed) * ratio;\n    this.maxSpeed = getRangeValue(particles.move.gravity.maxSpeed) * ratio;\n  }\n  initParticle(particle) {\n    const options = particle.options,\n      ratio = this.pixelRatio,\n      moveDistance = options.move.distance,\n      props = particle.retina;\n    props.attractDistance = getRangeValue(options.move.attract.distance) * ratio;\n    props.moveDrift = getRangeValue(options.move.drift) * ratio;\n    props.moveSpeed = getRangeValue(options.move.speed) * ratio;\n    props.sizeAnimationSpeed = getRangeValue(options.size.animation.speed) * ratio;\n    const maxDistance = props.maxDistance;\n    maxDistance.horizontal = moveDistance.horizontal !== undefined ? moveDistance.horizontal * ratio : undefined;\n    maxDistance.vertical = moveDistance.vertical !== undefined ? moveDistance.vertical * ratio : undefined;\n    props.maxSpeed = getRangeValue(options.move.gravity.maxSpeed) * ratio;\n  }\n}","map":{"version":3,"names":["getRangeValue","isSsr","Retina","constructor","container","init","options","actualOptions","pixelRatio","detectRetina","window","devicePixelRatio","reduceFactor","ratio","canvas","element","size","width","offsetWidth","height","offsetHeight","particles","attractDistance","move","attract","distance","sizeAnimationSpeed","animation","speed","maxSpeed","gravity","initParticle","particle","moveDistance","props","retina","moveDrift","drift","moveSpeed","maxDistance","horizontal","undefined","vertical"],"sources":["/Users/adri22/Desktop/AVA-Bot/app-web/node_modules/tsparticles-engine/esm/Core/Retina.js"],"sourcesContent":["import { getRangeValue } from \"../Utils/NumberUtils\";\nimport { isSsr } from \"../Utils/Utils\";\nexport class Retina {\n    constructor(container) {\n        this.container = container;\n    }\n    init() {\n        const container = this.container, options = container.actualOptions;\n        this.pixelRatio = !options.detectRetina || isSsr() ? 1 : window.devicePixelRatio;\n        this.reduceFactor = 1;\n        const ratio = this.pixelRatio;\n        if (container.canvas.element) {\n            const element = container.canvas.element;\n            container.canvas.size.width = element.offsetWidth * ratio;\n            container.canvas.size.height = element.offsetHeight * ratio;\n        }\n        const particles = options.particles;\n        this.attractDistance = getRangeValue(particles.move.attract.distance) * ratio;\n        this.sizeAnimationSpeed = getRangeValue(particles.size.animation.speed) * ratio;\n        this.maxSpeed = getRangeValue(particles.move.gravity.maxSpeed) * ratio;\n    }\n    initParticle(particle) {\n        const options = particle.options, ratio = this.pixelRatio, moveDistance = options.move.distance, props = particle.retina;\n        props.attractDistance = getRangeValue(options.move.attract.distance) * ratio;\n        props.moveDrift = getRangeValue(options.move.drift) * ratio;\n        props.moveSpeed = getRangeValue(options.move.speed) * ratio;\n        props.sizeAnimationSpeed = getRangeValue(options.size.animation.speed) * ratio;\n        const maxDistance = props.maxDistance;\n        maxDistance.horizontal = moveDistance.horizontal !== undefined ? moveDistance.horizontal * ratio : undefined;\n        maxDistance.vertical = moveDistance.vertical !== undefined ? moveDistance.vertical * ratio : undefined;\n        props.maxSpeed = getRangeValue(options.move.gravity.maxSpeed) * ratio;\n    }\n}\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,sBAAsB;AACpD,SAASC,KAAK,QAAQ,gBAAgB;AACtC,OAAO,MAAMC,MAAM,CAAC;EAChBC,WAAWA,CAACC,SAAS,EAAE;IACnB,IAAI,CAACA,SAAS,GAAGA,SAAS;EAC9B;EACAC,IAAIA,CAAA,EAAG;IACH,MAAMD,SAAS,GAAG,IAAI,CAACA,SAAS;MAAEE,OAAO,GAAGF,SAAS,CAACG,aAAa;IACnE,IAAI,CAACC,UAAU,GAAG,CAACF,OAAO,CAACG,YAAY,IAAIR,KAAK,EAAE,GAAG,CAAC,GAAGS,MAAM,CAACC,gBAAgB;IAChF,IAAI,CAACC,YAAY,GAAG,CAAC;IACrB,MAAMC,KAAK,GAAG,IAAI,CAACL,UAAU;IAC7B,IAAIJ,SAAS,CAACU,MAAM,CAACC,OAAO,EAAE;MAC1B,MAAMA,OAAO,GAAGX,SAAS,CAACU,MAAM,CAACC,OAAO;MACxCX,SAAS,CAACU,MAAM,CAACE,IAAI,CAACC,KAAK,GAAGF,OAAO,CAACG,WAAW,GAAGL,KAAK;MACzDT,SAAS,CAACU,MAAM,CAACE,IAAI,CAACG,MAAM,GAAGJ,OAAO,CAACK,YAAY,GAAGP,KAAK;IAC/D;IACA,MAAMQ,SAAS,GAAGf,OAAO,CAACe,SAAS;IACnC,IAAI,CAACC,eAAe,GAAGtB,aAAa,CAACqB,SAAS,CAACE,IAAI,CAACC,OAAO,CAACC,QAAQ,CAAC,GAAGZ,KAAK;IAC7E,IAAI,CAACa,kBAAkB,GAAG1B,aAAa,CAACqB,SAAS,CAACL,IAAI,CAACW,SAAS,CAACC,KAAK,CAAC,GAAGf,KAAK;IAC/E,IAAI,CAACgB,QAAQ,GAAG7B,aAAa,CAACqB,SAAS,CAACE,IAAI,CAACO,OAAO,CAACD,QAAQ,CAAC,GAAGhB,KAAK;EAC1E;EACAkB,YAAYA,CAACC,QAAQ,EAAE;IACnB,MAAM1B,OAAO,GAAG0B,QAAQ,CAAC1B,OAAO;MAAEO,KAAK,GAAG,IAAI,CAACL,UAAU;MAAEyB,YAAY,GAAG3B,OAAO,CAACiB,IAAI,CAACE,QAAQ;MAAES,KAAK,GAAGF,QAAQ,CAACG,MAAM;IACxHD,KAAK,CAACZ,eAAe,GAAGtB,aAAa,CAACM,OAAO,CAACiB,IAAI,CAACC,OAAO,CAACC,QAAQ,CAAC,GAAGZ,KAAK;IAC5EqB,KAAK,CAACE,SAAS,GAAGpC,aAAa,CAACM,OAAO,CAACiB,IAAI,CAACc,KAAK,CAAC,GAAGxB,KAAK;IAC3DqB,KAAK,CAACI,SAAS,GAAGtC,aAAa,CAACM,OAAO,CAACiB,IAAI,CAACK,KAAK,CAAC,GAAGf,KAAK;IAC3DqB,KAAK,CAACR,kBAAkB,GAAG1B,aAAa,CAACM,OAAO,CAACU,IAAI,CAACW,SAAS,CAACC,KAAK,CAAC,GAAGf,KAAK;IAC9E,MAAM0B,WAAW,GAAGL,KAAK,CAACK,WAAW;IACrCA,WAAW,CAACC,UAAU,GAAGP,YAAY,CAACO,UAAU,KAAKC,SAAS,GAAGR,YAAY,CAACO,UAAU,GAAG3B,KAAK,GAAG4B,SAAS;IAC5GF,WAAW,CAACG,QAAQ,GAAGT,YAAY,CAACS,QAAQ,KAAKD,SAAS,GAAGR,YAAY,CAACS,QAAQ,GAAG7B,KAAK,GAAG4B,SAAS;IACtGP,KAAK,CAACL,QAAQ,GAAG7B,aAAa,CAACM,OAAO,CAACiB,IAAI,CAACO,OAAO,CAACD,QAAQ,CAAC,GAAGhB,KAAK;EACzE;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}