{"ast":null,"code":"import { Circle, ExternalInteractorBase, Rectangle, Vector, clamp, divMode, divModeExecute, getDistances, getEasing, isDivModeEnabled, isInArray, mouseMoveEvent } from \"tsparticles-engine\";\nimport { Repulse } from \"./Options/Classes/Repulse\";\nexport class Repulser extends ExternalInteractorBase {\n  constructor(engine, container) {\n    super(container);\n    this._engine = engine;\n    if (!container.repulse) {\n      container.repulse = {\n        particles: []\n      };\n    }\n    this.handleClickMode = mode => {\n      const options = this.container.actualOptions,\n        repulse = options.interactivity.modes.repulse;\n      if (!repulse || mode !== \"repulse\") {\n        return;\n      }\n      if (!container.repulse) {\n        container.repulse = {\n          particles: []\n        };\n      }\n      container.repulse.clicking = true;\n      container.repulse.count = 0;\n      for (const particle of container.repulse.particles) {\n        if (!this.isEnabled(particle)) {\n          continue;\n        }\n        particle.velocity.setTo(particle.initialVelocity);\n      }\n      container.repulse.particles = [];\n      container.repulse.finish = false;\n      setTimeout(() => {\n        if (!container.destroyed) {\n          if (!container.repulse) {\n            container.repulse = {\n              particles: []\n            };\n          }\n          container.repulse.clicking = false;\n        }\n      }, repulse.duration * 1000);\n    };\n  }\n  clear() {}\n  init() {\n    const container = this.container,\n      repulse = container.actualOptions.interactivity.modes.repulse;\n    if (!repulse) {\n      return;\n    }\n    container.retina.repulseModeDistance = repulse.distance * container.retina.pixelRatio;\n  }\n  async interact() {\n    const container = this.container,\n      options = container.actualOptions,\n      mouseMoveStatus = container.interactivity.status === mouseMoveEvent,\n      events = options.interactivity.events,\n      hoverEnabled = events.onHover.enable,\n      hoverMode = events.onHover.mode,\n      clickEnabled = events.onClick.enable,\n      clickMode = events.onClick.mode,\n      divs = events.onDiv;\n    if (mouseMoveStatus && hoverEnabled && isInArray(\"repulse\", hoverMode)) {\n      this.hoverRepulse();\n    } else if (clickEnabled && isInArray(\"repulse\", clickMode)) {\n      this.clickRepulse();\n    } else {\n      divModeExecute(\"repulse\", divs, (selector, div) => this.singleSelectorRepulse(selector, div));\n    }\n  }\n  isEnabled(particle) {\n    var _a;\n    const container = this.container,\n      options = container.actualOptions,\n      mouse = container.interactivity.mouse,\n      events = ((_a = particle === null || particle === void 0 ? void 0 : particle.interactivity) !== null && _a !== void 0 ? _a : options.interactivity).events,\n      divs = events.onDiv,\n      divRepulse = isDivModeEnabled(\"repulse\", divs);\n    if (!(divRepulse || events.onHover.enable && mouse.position || events.onClick.enable && mouse.clickPosition)) {\n      return false;\n    }\n    const hoverMode = events.onHover.mode,\n      clickMode = events.onClick.mode;\n    return isInArray(\"repulse\", hoverMode) || isInArray(\"repulse\", clickMode) || divRepulse;\n  }\n  loadModeOptions(options) {\n    if (!options.repulse) {\n      options.repulse = new Repulse();\n    }\n    for (var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      sources[_key - 1] = arguments[_key];\n    }\n    for (const source of sources) {\n      options.repulse.load(source === null || source === void 0 ? void 0 : source.repulse);\n    }\n  }\n  reset() {}\n  clickRepulse() {\n    const container = this.container,\n      repulse = container.actualOptions.interactivity.modes.repulse;\n    if (!repulse) {\n      return;\n    }\n    if (!container.repulse) {\n      container.repulse = {\n        particles: []\n      };\n    }\n    if (!container.repulse.finish) {\n      if (!container.repulse.count) {\n        container.repulse.count = 0;\n      }\n      container.repulse.count++;\n      if (container.repulse.count === container.particles.count) {\n        container.repulse.finish = true;\n      }\n    }\n    if (container.repulse.clicking) {\n      const repulseDistance = container.retina.repulseModeDistance;\n      if (!repulseDistance || repulseDistance < 0) {\n        return;\n      }\n      const repulseRadius = Math.pow(repulseDistance / 6, 3),\n        mouseClickPos = container.interactivity.mouse.clickPosition;\n      if (mouseClickPos === undefined) {\n        return;\n      }\n      const range = new Circle(mouseClickPos.x, mouseClickPos.y, repulseRadius),\n        query = container.particles.quadTree.query(range, p => this.isEnabled(p));\n      for (const particle of query) {\n        const {\n            dx,\n            dy,\n            distance\n          } = getDistances(mouseClickPos, particle.position),\n          d = distance ** 2,\n          velocity = repulse.speed,\n          force = -repulseRadius * velocity / d;\n        if (d <= repulseRadius) {\n          container.repulse.particles.push(particle);\n          const vect = Vector.create(dx, dy);\n          vect.length = force;\n          particle.velocity.setTo(vect);\n        }\n      }\n    } else if (container.repulse.clicking === false) {\n      for (const particle of container.repulse.particles) {\n        particle.velocity.setTo(particle.initialVelocity);\n      }\n      container.repulse.particles = [];\n    }\n  }\n  hoverRepulse() {\n    const container = this.container,\n      mousePos = container.interactivity.mouse.position,\n      repulseRadius = container.retina.repulseModeDistance;\n    if (!repulseRadius || repulseRadius < 0 || !mousePos) {\n      return;\n    }\n    this.processRepulse(mousePos, repulseRadius, new Circle(mousePos.x, mousePos.y, repulseRadius));\n  }\n  processRepulse(position, repulseRadius, area, divRepulse) {\n    var _a;\n    const container = this.container,\n      query = container.particles.quadTree.query(area, p => this.isEnabled(p)),\n      repulseOptions = container.actualOptions.interactivity.modes.repulse;\n    if (!repulseOptions) {\n      return;\n    }\n    for (const particle of query) {\n      const {\n          dx,\n          dy,\n          distance\n        } = getDistances(particle.position, position),\n        velocity = ((_a = divRepulse === null || divRepulse === void 0 ? void 0 : divRepulse.speed) !== null && _a !== void 0 ? _a : repulseOptions.speed) * repulseOptions.factor,\n        repulseFactor = clamp(getEasing(repulseOptions.easing)(1 - distance / repulseRadius) * velocity, 0, repulseOptions.maxSpeed),\n        normVec = Vector.create(distance === 0 ? velocity : dx / distance * repulseFactor, distance === 0 ? velocity : dy / distance * repulseFactor);\n      particle.position.addTo(normVec);\n    }\n  }\n  singleSelectorRepulse(selector, div) {\n    const container = this.container,\n      repulse = container.actualOptions.interactivity.modes.repulse;\n    if (!repulse) {\n      return;\n    }\n    const query = document.querySelectorAll(selector);\n    if (!query.length) {\n      return;\n    }\n    query.forEach(item => {\n      const elem = item,\n        pxRatio = container.retina.pixelRatio,\n        pos = {\n          x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n          y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio\n        },\n        repulseRadius = elem.offsetWidth / 2 * pxRatio,\n        area = div.type === \"circle\" ? new Circle(pos.x, pos.y, repulseRadius) : new Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio),\n        divs = repulse.divs,\n        divRepulse = divMode(divs, elem);\n      this.processRepulse(pos, repulseRadius, area, divRepulse);\n    });\n  }\n}","map":{"version":3,"names":["Circle","ExternalInteractorBase","Rectangle","Vector","clamp","divMode","divModeExecute","getDistances","getEasing","isDivModeEnabled","isInArray","mouseMoveEvent","Repulse","Repulser","constructor","engine","container","_engine","repulse","particles","handleClickMode","mode","options","actualOptions","interactivity","modes","clicking","count","particle","isEnabled","velocity","setTo","initialVelocity","finish","setTimeout","destroyed","duration","clear","init","retina","repulseModeDistance","distance","pixelRatio","interact","mouseMoveStatus","status","events","hoverEnabled","onHover","enable","hoverMode","clickEnabled","onClick","clickMode","divs","onDiv","hoverRepulse","clickRepulse","selector","div","singleSelectorRepulse","_a","mouse","divRepulse","position","clickPosition","loadModeOptions","_len","arguments","length","sources","Array","_key","source","load","reset","repulseDistance","repulseRadius","Math","pow","mouseClickPos","undefined","range","x","y","query","quadTree","p","dx","dy","d","speed","force","push","vect","create","mousePos","processRepulse","area","repulseOptions","factor","repulseFactor","easing","maxSpeed","normVec","addTo","document","querySelectorAll","forEach","item","elem","pxRatio","pos","offsetLeft","offsetWidth","offsetTop","offsetHeight","type"],"sources":["/Users/adri22/Desktop/AVA-Bot/app-web/node_modules/tsparticles-interaction-external-repulse/esm/Repulser.js"],"sourcesContent":["import { Circle, ExternalInteractorBase, Rectangle, Vector, clamp, divMode, divModeExecute, getDistances, getEasing, isDivModeEnabled, isInArray, mouseMoveEvent, } from \"tsparticles-engine\";\nimport { Repulse } from \"./Options/Classes/Repulse\";\nexport class Repulser extends ExternalInteractorBase {\n    constructor(engine, container) {\n        super(container);\n        this._engine = engine;\n        if (!container.repulse) {\n            container.repulse = { particles: [] };\n        }\n        this.handleClickMode = (mode) => {\n            const options = this.container.actualOptions, repulse = options.interactivity.modes.repulse;\n            if (!repulse || mode !== \"repulse\") {\n                return;\n            }\n            if (!container.repulse) {\n                container.repulse = { particles: [] };\n            }\n            container.repulse.clicking = true;\n            container.repulse.count = 0;\n            for (const particle of container.repulse.particles) {\n                if (!this.isEnabled(particle)) {\n                    continue;\n                }\n                particle.velocity.setTo(particle.initialVelocity);\n            }\n            container.repulse.particles = [];\n            container.repulse.finish = false;\n            setTimeout(() => {\n                if (!container.destroyed) {\n                    if (!container.repulse) {\n                        container.repulse = { particles: [] };\n                    }\n                    container.repulse.clicking = false;\n                }\n            }, repulse.duration * 1000);\n        };\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, repulse = container.actualOptions.interactivity.modes.repulse;\n        if (!repulse) {\n            return;\n        }\n        container.retina.repulseModeDistance = repulse.distance * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, events = options.interactivity.events, hoverEnabled = events.onHover.enable, hoverMode = events.onHover.mode, clickEnabled = events.onClick.enable, clickMode = events.onClick.mode, divs = events.onDiv;\n        if (mouseMoveStatus && hoverEnabled && isInArray(\"repulse\", hoverMode)) {\n            this.hoverRepulse();\n        }\n        else if (clickEnabled && isInArray(\"repulse\", clickMode)) {\n            this.clickRepulse();\n        }\n        else {\n            divModeExecute(\"repulse\", divs, (selector, div) => this.singleSelectorRepulse(selector, div));\n        }\n    }\n    isEnabled(particle) {\n        var _a;\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = ((_a = particle === null || particle === void 0 ? void 0 : particle.interactivity) !== null && _a !== void 0 ? _a : options.interactivity).events, divs = events.onDiv, divRepulse = isDivModeEnabled(\"repulse\", divs);\n        if (!(divRepulse || (events.onHover.enable && mouse.position) || (events.onClick.enable && mouse.clickPosition))) {\n            return false;\n        }\n        const hoverMode = events.onHover.mode, clickMode = events.onClick.mode;\n        return isInArray(\"repulse\", hoverMode) || isInArray(\"repulse\", clickMode) || divRepulse;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.repulse) {\n            options.repulse = new Repulse();\n        }\n        for (const source of sources) {\n            options.repulse.load(source === null || source === void 0 ? void 0 : source.repulse);\n        }\n    }\n    reset() {\n    }\n    clickRepulse() {\n        const container = this.container, repulse = container.actualOptions.interactivity.modes.repulse;\n        if (!repulse) {\n            return;\n        }\n        if (!container.repulse) {\n            container.repulse = { particles: [] };\n        }\n        if (!container.repulse.finish) {\n            if (!container.repulse.count) {\n                container.repulse.count = 0;\n            }\n            container.repulse.count++;\n            if (container.repulse.count === container.particles.count) {\n                container.repulse.finish = true;\n            }\n        }\n        if (container.repulse.clicking) {\n            const repulseDistance = container.retina.repulseModeDistance;\n            if (!repulseDistance || repulseDistance < 0) {\n                return;\n            }\n            const repulseRadius = Math.pow(repulseDistance / 6, 3), mouseClickPos = container.interactivity.mouse.clickPosition;\n            if (mouseClickPos === undefined) {\n                return;\n            }\n            const range = new Circle(mouseClickPos.x, mouseClickPos.y, repulseRadius), query = container.particles.quadTree.query(range, (p) => this.isEnabled(p));\n            for (const particle of query) {\n                const { dx, dy, distance } = getDistances(mouseClickPos, particle.position), d = distance ** 2, velocity = repulse.speed, force = (-repulseRadius * velocity) / d;\n                if (d <= repulseRadius) {\n                    container.repulse.particles.push(particle);\n                    const vect = Vector.create(dx, dy);\n                    vect.length = force;\n                    particle.velocity.setTo(vect);\n                }\n            }\n        }\n        else if (container.repulse.clicking === false) {\n            for (const particle of container.repulse.particles) {\n                particle.velocity.setTo(particle.initialVelocity);\n            }\n            container.repulse.particles = [];\n        }\n    }\n    hoverRepulse() {\n        const container = this.container, mousePos = container.interactivity.mouse.position, repulseRadius = container.retina.repulseModeDistance;\n        if (!repulseRadius || repulseRadius < 0 || !mousePos) {\n            return;\n        }\n        this.processRepulse(mousePos, repulseRadius, new Circle(mousePos.x, mousePos.y, repulseRadius));\n    }\n    processRepulse(position, repulseRadius, area, divRepulse) {\n        var _a;\n        const container = this.container, query = container.particles.quadTree.query(area, (p) => this.isEnabled(p)), repulseOptions = container.actualOptions.interactivity.modes.repulse;\n        if (!repulseOptions) {\n            return;\n        }\n        for (const particle of query) {\n            const { dx, dy, distance } = getDistances(particle.position, position), velocity = ((_a = divRepulse === null || divRepulse === void 0 ? void 0 : divRepulse.speed) !== null && _a !== void 0 ? _a : repulseOptions.speed) * repulseOptions.factor, repulseFactor = clamp(getEasing(repulseOptions.easing)(1 - distance / repulseRadius) * velocity, 0, repulseOptions.maxSpeed), normVec = Vector.create(distance === 0 ? velocity : (dx / distance) * repulseFactor, distance === 0 ? velocity : (dy / distance) * repulseFactor);\n            particle.position.addTo(normVec);\n        }\n    }\n    singleSelectorRepulse(selector, div) {\n        const container = this.container, repulse = container.actualOptions.interactivity.modes.repulse;\n        if (!repulse) {\n            return;\n        }\n        const query = document.querySelectorAll(selector);\n        if (!query.length) {\n            return;\n        }\n        query.forEach((item) => {\n            const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n                x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n                y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio,\n            }, repulseRadius = (elem.offsetWidth / 2) * pxRatio, area = div.type === \"circle\"\n                ? new Circle(pos.x, pos.y, repulseRadius)\n                : new Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio), divs = repulse.divs, divRepulse = divMode(divs, elem);\n            this.processRepulse(pos, repulseRadius, area, divRepulse);\n        });\n    }\n}\n"],"mappings":"AAAA,SAASA,MAAM,EAAEC,sBAAsB,EAAEC,SAAS,EAAEC,MAAM,EAAEC,KAAK,EAAEC,OAAO,EAAEC,cAAc,EAAEC,YAAY,EAAEC,SAAS,EAAEC,gBAAgB,EAAEC,SAAS,EAAEC,cAAc,QAAS,oBAAoB;AAC7L,SAASC,OAAO,QAAQ,2BAA2B;AACnD,OAAO,MAAMC,QAAQ,SAASZ,sBAAsB,CAAC;EACjDa,WAAWA,CAACC,MAAM,EAAEC,SAAS,EAAE;IAC3B,KAAK,CAACA,SAAS,CAAC;IAChB,IAAI,CAACC,OAAO,GAAGF,MAAM;IACrB,IAAI,CAACC,SAAS,CAACE,OAAO,EAAE;MACpBF,SAAS,CAACE,OAAO,GAAG;QAAEC,SAAS,EAAE;MAAG,CAAC;IACzC;IACA,IAAI,CAACC,eAAe,GAAIC,IAAI,IAAK;MAC7B,MAAMC,OAAO,GAAG,IAAI,CAACN,SAAS,CAACO,aAAa;QAAEL,OAAO,GAAGI,OAAO,CAACE,aAAa,CAACC,KAAK,CAACP,OAAO;MAC3F,IAAI,CAACA,OAAO,IAAIG,IAAI,KAAK,SAAS,EAAE;QAChC;MACJ;MACA,IAAI,CAACL,SAAS,CAACE,OAAO,EAAE;QACpBF,SAAS,CAACE,OAAO,GAAG;UAAEC,SAAS,EAAE;QAAG,CAAC;MACzC;MACAH,SAAS,CAACE,OAAO,CAACQ,QAAQ,GAAG,IAAI;MACjCV,SAAS,CAACE,OAAO,CAACS,KAAK,GAAG,CAAC;MAC3B,KAAK,MAAMC,QAAQ,IAAIZ,SAAS,CAACE,OAAO,CAACC,SAAS,EAAE;QAChD,IAAI,CAAC,IAAI,CAACU,SAAS,CAACD,QAAQ,CAAC,EAAE;UAC3B;QACJ;QACAA,QAAQ,CAACE,QAAQ,CAACC,KAAK,CAACH,QAAQ,CAACI,eAAe,CAAC;MACrD;MACAhB,SAAS,CAACE,OAAO,CAACC,SAAS,GAAG,EAAE;MAChCH,SAAS,CAACE,OAAO,CAACe,MAAM,GAAG,KAAK;MAChCC,UAAU,CAAC,MAAM;QACb,IAAI,CAAClB,SAAS,CAACmB,SAAS,EAAE;UACtB,IAAI,CAACnB,SAAS,CAACE,OAAO,EAAE;YACpBF,SAAS,CAACE,OAAO,GAAG;cAAEC,SAAS,EAAE;YAAG,CAAC;UACzC;UACAH,SAAS,CAACE,OAAO,CAACQ,QAAQ,GAAG,KAAK;QACtC;MACJ,CAAC,EAAER,OAAO,CAACkB,QAAQ,GAAG,IAAI,CAAC;IAC/B,CAAC;EACL;EACAC,KAAKA,CAAA,EAAG,CACR;EACAC,IAAIA,CAAA,EAAG;IACH,MAAMtB,SAAS,GAAG,IAAI,CAACA,SAAS;MAAEE,OAAO,GAAGF,SAAS,CAACO,aAAa,CAACC,aAAa,CAACC,KAAK,CAACP,OAAO;IAC/F,IAAI,CAACA,OAAO,EAAE;MACV;IACJ;IACAF,SAAS,CAACuB,MAAM,CAACC,mBAAmB,GAAGtB,OAAO,CAACuB,QAAQ,GAAGzB,SAAS,CAACuB,MAAM,CAACG,UAAU;EACzF;EACA,MAAMC,QAAQA,CAAA,EAAG;IACb,MAAM3B,SAAS,GAAG,IAAI,CAACA,SAAS;MAAEM,OAAO,GAAGN,SAAS,CAACO,aAAa;MAAEqB,eAAe,GAAG5B,SAAS,CAACQ,aAAa,CAACqB,MAAM,KAAKlC,cAAc;MAAEmC,MAAM,GAAGxB,OAAO,CAACE,aAAa,CAACsB,MAAM;MAAEC,YAAY,GAAGD,MAAM,CAACE,OAAO,CAACC,MAAM;MAAEC,SAAS,GAAGJ,MAAM,CAACE,OAAO,CAAC3B,IAAI;MAAE8B,YAAY,GAAGL,MAAM,CAACM,OAAO,CAACH,MAAM;MAAEI,SAAS,GAAGP,MAAM,CAACM,OAAO,CAAC/B,IAAI;MAAEiC,IAAI,GAAGR,MAAM,CAACS,KAAK;IAClV,IAAIX,eAAe,IAAIG,YAAY,IAAIrC,SAAS,CAAC,SAAS,EAAEwC,SAAS,CAAC,EAAE;MACpE,IAAI,CAACM,YAAY,EAAE;IACvB,CAAC,MACI,IAAIL,YAAY,IAAIzC,SAAS,CAAC,SAAS,EAAE2C,SAAS,CAAC,EAAE;MACtD,IAAI,CAACI,YAAY,EAAE;IACvB,CAAC,MACI;MACDnD,cAAc,CAAC,SAAS,EAAEgD,IAAI,EAAE,CAACI,QAAQ,EAAEC,GAAG,KAAK,IAAI,CAACC,qBAAqB,CAACF,QAAQ,EAAEC,GAAG,CAAC,CAAC;IACjG;EACJ;EACA9B,SAASA,CAACD,QAAQ,EAAE;IAChB,IAAIiC,EAAE;IACN,MAAM7C,SAAS,GAAG,IAAI,CAACA,SAAS;MAAEM,OAAO,GAAGN,SAAS,CAACO,aAAa;MAAEuC,KAAK,GAAG9C,SAAS,CAACQ,aAAa,CAACsC,KAAK;MAAEhB,MAAM,GAAG,CAAC,CAACe,EAAE,GAAGjC,QAAQ,KAAK,IAAI,IAAIA,QAAQ,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,QAAQ,CAACJ,aAAa,MAAM,IAAI,IAAIqC,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAGvC,OAAO,CAACE,aAAa,EAAEsB,MAAM;MAAEQ,IAAI,GAAGR,MAAM,CAACS,KAAK;MAAEQ,UAAU,GAAGtD,gBAAgB,CAAC,SAAS,EAAE6C,IAAI,CAAC;IAC3U,IAAI,EAAES,UAAU,IAAKjB,MAAM,CAACE,OAAO,CAACC,MAAM,IAAIa,KAAK,CAACE,QAAS,IAAKlB,MAAM,CAACM,OAAO,CAACH,MAAM,IAAIa,KAAK,CAACG,aAAc,CAAC,EAAE;MAC9G,OAAO,KAAK;IAChB;IACA,MAAMf,SAAS,GAAGJ,MAAM,CAACE,OAAO,CAAC3B,IAAI;MAAEgC,SAAS,GAAGP,MAAM,CAACM,OAAO,CAAC/B,IAAI;IACtE,OAAOX,SAAS,CAAC,SAAS,EAAEwC,SAAS,CAAC,IAAIxC,SAAS,CAAC,SAAS,EAAE2C,SAAS,CAAC,IAAIU,UAAU;EAC3F;EACAG,eAAeA,CAAC5C,OAAO,EAAc;IACjC,IAAI,CAACA,OAAO,CAACJ,OAAO,EAAE;MAClBI,OAAO,CAACJ,OAAO,GAAG,IAAIN,OAAO,EAAE;IACnC;IAAC,SAAAuD,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAHuBC,OAAO,OAAAC,KAAA,CAAAJ,IAAA,OAAAA,IAAA,WAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;MAAPF,OAAO,CAAAE,IAAA,QAAAJ,SAAA,CAAAI,IAAA;IAAA;IAI/B,KAAK,MAAMC,MAAM,IAAIH,OAAO,EAAE;MAC1BhD,OAAO,CAACJ,OAAO,CAACwD,IAAI,CAACD,MAAM,KAAK,IAAI,IAAIA,MAAM,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,MAAM,CAACvD,OAAO,CAAC;IACxF;EACJ;EACAyD,KAAKA,CAAA,EAAG,CACR;EACAlB,YAAYA,CAAA,EAAG;IACX,MAAMzC,SAAS,GAAG,IAAI,CAACA,SAAS;MAAEE,OAAO,GAAGF,SAAS,CAACO,aAAa,CAACC,aAAa,CAACC,KAAK,CAACP,OAAO;IAC/F,IAAI,CAACA,OAAO,EAAE;MACV;IACJ;IACA,IAAI,CAACF,SAAS,CAACE,OAAO,EAAE;MACpBF,SAAS,CAACE,OAAO,GAAG;QAAEC,SAAS,EAAE;MAAG,CAAC;IACzC;IACA,IAAI,CAACH,SAAS,CAACE,OAAO,CAACe,MAAM,EAAE;MAC3B,IAAI,CAACjB,SAAS,CAACE,OAAO,CAACS,KAAK,EAAE;QAC1BX,SAAS,CAACE,OAAO,CAACS,KAAK,GAAG,CAAC;MAC/B;MACAX,SAAS,CAACE,OAAO,CAACS,KAAK,EAAE;MACzB,IAAIX,SAAS,CAACE,OAAO,CAACS,KAAK,KAAKX,SAAS,CAACG,SAAS,CAACQ,KAAK,EAAE;QACvDX,SAAS,CAACE,OAAO,CAACe,MAAM,GAAG,IAAI;MACnC;IACJ;IACA,IAAIjB,SAAS,CAACE,OAAO,CAACQ,QAAQ,EAAE;MAC5B,MAAMkD,eAAe,GAAG5D,SAAS,CAACuB,MAAM,CAACC,mBAAmB;MAC5D,IAAI,CAACoC,eAAe,IAAIA,eAAe,GAAG,CAAC,EAAE;QACzC;MACJ;MACA,MAAMC,aAAa,GAAGC,IAAI,CAACC,GAAG,CAACH,eAAe,GAAG,CAAC,EAAE,CAAC,CAAC;QAAEI,aAAa,GAAGhE,SAAS,CAACQ,aAAa,CAACsC,KAAK,CAACG,aAAa;MACnH,IAAIe,aAAa,KAAKC,SAAS,EAAE;QAC7B;MACJ;MACA,MAAMC,KAAK,GAAG,IAAIlF,MAAM,CAACgF,aAAa,CAACG,CAAC,EAAEH,aAAa,CAACI,CAAC,EAAEP,aAAa,CAAC;QAAEQ,KAAK,GAAGrE,SAAS,CAACG,SAAS,CAACmE,QAAQ,CAACD,KAAK,CAACH,KAAK,EAAGK,CAAC,IAAK,IAAI,CAAC1D,SAAS,CAAC0D,CAAC,CAAC,CAAC;MACtJ,KAAK,MAAM3D,QAAQ,IAAIyD,KAAK,EAAE;QAC1B,MAAM;YAAEG,EAAE;YAAEC,EAAE;YAAEhD;UAAS,CAAC,GAAGlC,YAAY,CAACyE,aAAa,EAAEpD,QAAQ,CAACoC,QAAQ,CAAC;UAAE0B,CAAC,GAAGjD,QAAQ,IAAI,CAAC;UAAEX,QAAQ,GAAGZ,OAAO,CAACyE,KAAK;UAAEC,KAAK,GAAI,CAACf,aAAa,GAAG/C,QAAQ,GAAI4D,CAAC;QACjK,IAAIA,CAAC,IAAIb,aAAa,EAAE;UACpB7D,SAAS,CAACE,OAAO,CAACC,SAAS,CAAC0E,IAAI,CAACjE,QAAQ,CAAC;UAC1C,MAAMkE,IAAI,GAAG3F,MAAM,CAAC4F,MAAM,CAACP,EAAE,EAAEC,EAAE,CAAC;UAClCK,IAAI,CAACzB,MAAM,GAAGuB,KAAK;UACnBhE,QAAQ,CAACE,QAAQ,CAACC,KAAK,CAAC+D,IAAI,CAAC;QACjC;MACJ;IACJ,CAAC,MACI,IAAI9E,SAAS,CAACE,OAAO,CAACQ,QAAQ,KAAK,KAAK,EAAE;MAC3C,KAAK,MAAME,QAAQ,IAAIZ,SAAS,CAACE,OAAO,CAACC,SAAS,EAAE;QAChDS,QAAQ,CAACE,QAAQ,CAACC,KAAK,CAACH,QAAQ,CAACI,eAAe,CAAC;MACrD;MACAhB,SAAS,CAACE,OAAO,CAACC,SAAS,GAAG,EAAE;IACpC;EACJ;EACAqC,YAAYA,CAAA,EAAG;IACX,MAAMxC,SAAS,GAAG,IAAI,CAACA,SAAS;MAAEgF,QAAQ,GAAGhF,SAAS,CAACQ,aAAa,CAACsC,KAAK,CAACE,QAAQ;MAAEa,aAAa,GAAG7D,SAAS,CAACuB,MAAM,CAACC,mBAAmB;IACzI,IAAI,CAACqC,aAAa,IAAIA,aAAa,GAAG,CAAC,IAAI,CAACmB,QAAQ,EAAE;MAClD;IACJ;IACA,IAAI,CAACC,cAAc,CAACD,QAAQ,EAAEnB,aAAa,EAAE,IAAI7E,MAAM,CAACgG,QAAQ,CAACb,CAAC,EAAEa,QAAQ,CAACZ,CAAC,EAAEP,aAAa,CAAC,CAAC;EACnG;EACAoB,cAAcA,CAACjC,QAAQ,EAAEa,aAAa,EAAEqB,IAAI,EAAEnC,UAAU,EAAE;IACtD,IAAIF,EAAE;IACN,MAAM7C,SAAS,GAAG,IAAI,CAACA,SAAS;MAAEqE,KAAK,GAAGrE,SAAS,CAACG,SAAS,CAACmE,QAAQ,CAACD,KAAK,CAACa,IAAI,EAAGX,CAAC,IAAK,IAAI,CAAC1D,SAAS,CAAC0D,CAAC,CAAC,CAAC;MAAEY,cAAc,GAAGnF,SAAS,CAACO,aAAa,CAACC,aAAa,CAACC,KAAK,CAACP,OAAO;IAClL,IAAI,CAACiF,cAAc,EAAE;MACjB;IACJ;IACA,KAAK,MAAMvE,QAAQ,IAAIyD,KAAK,EAAE;MAC1B,MAAM;UAAEG,EAAE;UAAEC,EAAE;UAAEhD;QAAS,CAAC,GAAGlC,YAAY,CAACqB,QAAQ,CAACoC,QAAQ,EAAEA,QAAQ,CAAC;QAAElC,QAAQ,GAAG,CAAC,CAAC+B,EAAE,GAAGE,UAAU,KAAK,IAAI,IAAIA,UAAU,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,UAAU,CAAC4B,KAAK,MAAM,IAAI,IAAI9B,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAGsC,cAAc,CAACR,KAAK,IAAIQ,cAAc,CAACC,MAAM;QAAEC,aAAa,GAAGjG,KAAK,CAACI,SAAS,CAAC2F,cAAc,CAACG,MAAM,CAAC,CAAC,CAAC,GAAG7D,QAAQ,GAAGoC,aAAa,CAAC,GAAG/C,QAAQ,EAAE,CAAC,EAAEqE,cAAc,CAACI,QAAQ,CAAC;QAAEC,OAAO,GAAGrG,MAAM,CAAC4F,MAAM,CAACtD,QAAQ,KAAK,CAAC,GAAGX,QAAQ,GAAI0D,EAAE,GAAG/C,QAAQ,GAAI4D,aAAa,EAAE5D,QAAQ,KAAK,CAAC,GAAGX,QAAQ,GAAI2D,EAAE,GAAGhD,QAAQ,GAAI4D,aAAa,CAAC;MACngBzE,QAAQ,CAACoC,QAAQ,CAACyC,KAAK,CAACD,OAAO,CAAC;IACpC;EACJ;EACA5C,qBAAqBA,CAACF,QAAQ,EAAEC,GAAG,EAAE;IACjC,MAAM3C,SAAS,GAAG,IAAI,CAACA,SAAS;MAAEE,OAAO,GAAGF,SAAS,CAACO,aAAa,CAACC,aAAa,CAACC,KAAK,CAACP,OAAO;IAC/F,IAAI,CAACA,OAAO,EAAE;MACV;IACJ;IACA,MAAMmE,KAAK,GAAGqB,QAAQ,CAACC,gBAAgB,CAACjD,QAAQ,CAAC;IACjD,IAAI,CAAC2B,KAAK,CAAChB,MAAM,EAAE;MACf;IACJ;IACAgB,KAAK,CAACuB,OAAO,CAAEC,IAAI,IAAK;MACpB,MAAMC,IAAI,GAAGD,IAAI;QAAEE,OAAO,GAAG/F,SAAS,CAACuB,MAAM,CAACG,UAAU;QAAEsE,GAAG,GAAG;UAC5D7B,CAAC,EAAE,CAAC2B,IAAI,CAACG,UAAU,GAAGH,IAAI,CAACI,WAAW,GAAG,CAAC,IAAIH,OAAO;UACrD3B,CAAC,EAAE,CAAC0B,IAAI,CAACK,SAAS,GAAGL,IAAI,CAACM,YAAY,GAAG,CAAC,IAAIL;QAClD,CAAC;QAAElC,aAAa,GAAIiC,IAAI,CAACI,WAAW,GAAG,CAAC,GAAIH,OAAO;QAAEb,IAAI,GAAGvC,GAAG,CAAC0D,IAAI,KAAK,QAAQ,GAC3E,IAAIrH,MAAM,CAACgH,GAAG,CAAC7B,CAAC,EAAE6B,GAAG,CAAC5B,CAAC,EAAEP,aAAa,CAAC,GACvC,IAAI3E,SAAS,CAAC4G,IAAI,CAACG,UAAU,GAAGF,OAAO,EAAED,IAAI,CAACK,SAAS,GAAGJ,OAAO,EAAED,IAAI,CAACI,WAAW,GAAGH,OAAO,EAAED,IAAI,CAACM,YAAY,GAAGL,OAAO,CAAC;QAAEzD,IAAI,GAAGpC,OAAO,CAACoC,IAAI;QAAES,UAAU,GAAG1D,OAAO,CAACiD,IAAI,EAAEwD,IAAI,CAAC;MACxL,IAAI,CAACb,cAAc,CAACe,GAAG,EAAEnC,aAAa,EAAEqB,IAAI,EAAEnC,UAAU,CAAC;IAC7D,CAAC,CAAC;EACN;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}