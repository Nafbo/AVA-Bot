{"ast":null,"code":"import { getRandom, getRangeValue } from \"tsparticles-engine\";\nimport { Wobble } from \"./Options/Classes/Wobble\";\nfunction updateWobble(particle, delta) {\n  var _a;\n  const wobble = particle.options.wobble;\n  if (!(wobble === null || wobble === void 0 ? void 0 : wobble.enable) || !particle.wobble) {\n    return;\n  }\n  const angleSpeed = particle.wobble.angleSpeed * delta.factor,\n    moveSpeed = particle.wobble.moveSpeed * delta.factor,\n    distance = moveSpeed * (((_a = particle.retina.wobbleDistance) !== null && _a !== void 0 ? _a : 0) * delta.factor) / (1000 / 60),\n    max = 2 * Math.PI;\n  particle.wobble.angle += angleSpeed;\n  if (particle.wobble.angle > max) {\n    particle.wobble.angle -= max;\n  }\n  particle.position.x += distance * Math.cos(particle.wobble.angle);\n  particle.position.y += distance * Math.abs(Math.sin(particle.wobble.angle));\n}\nexport class WobbleUpdater {\n  constructor(container) {\n    this.container = container;\n  }\n  init(particle) {\n    var _a;\n    const wobbleOpt = particle.options.wobble;\n    if (wobbleOpt === null || wobbleOpt === void 0 ? void 0 : wobbleOpt.enable) {\n      particle.wobble = {\n        angle: getRandom() * Math.PI * 2,\n        angleSpeed: getRangeValue(wobbleOpt.speed.angle) / 360,\n        moveSpeed: getRangeValue(wobbleOpt.speed.move) / 10\n      };\n    } else {\n      particle.wobble = {\n        angle: 0,\n        angleSpeed: 0,\n        moveSpeed: 0\n      };\n    }\n    particle.retina.wobbleDistance = getRangeValue((_a = wobbleOpt === null || wobbleOpt === void 0 ? void 0 : wobbleOpt.distance) !== null && _a !== void 0 ? _a : 0) * this.container.retina.pixelRatio;\n  }\n  isEnabled(particle) {\n    var _a;\n    return !particle.destroyed && !particle.spawning && !!((_a = particle.options.wobble) === null || _a === void 0 ? void 0 : _a.enable);\n  }\n  loadOptions(options) {\n    if (!options.wobble) {\n      options.wobble = new Wobble();\n    }\n    for (var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      sources[_key - 1] = arguments[_key];\n    }\n    for (const source of sources) {\n      options.wobble.load(source === null || source === void 0 ? void 0 : source.wobble);\n    }\n  }\n  update(particle, delta) {\n    if (!this.isEnabled(particle)) {\n      return;\n    }\n    updateWobble(particle, delta);\n  }\n}","map":{"version":3,"names":["getRandom","getRangeValue","Wobble","updateWobble","particle","delta","_a","wobble","options","enable","angleSpeed","factor","moveSpeed","distance","retina","wobbleDistance","max","Math","PI","angle","position","x","cos","y","abs","sin","WobbleUpdater","constructor","container","init","wobbleOpt","speed","move","pixelRatio","isEnabled","destroyed","spawning","loadOptions","_len","arguments","length","sources","Array","_key","source","load","update"],"sources":["/Users/adri22/Desktop/AVA-Bot/app-web/node_modules/tsparticles-updater-wobble/esm/WobbleUpdater.js"],"sourcesContent":["import { getRandom, getRangeValue } from \"tsparticles-engine\";\nimport { Wobble } from \"./Options/Classes/Wobble\";\nfunction updateWobble(particle, delta) {\n    var _a;\n    const wobble = particle.options.wobble;\n    if (!(wobble === null || wobble === void 0 ? void 0 : wobble.enable) || !particle.wobble) {\n        return;\n    }\n    const angleSpeed = particle.wobble.angleSpeed * delta.factor, moveSpeed = particle.wobble.moveSpeed * delta.factor, distance = (moveSpeed * (((_a = particle.retina.wobbleDistance) !== null && _a !== void 0 ? _a : 0) * delta.factor)) / (1000 / 60), max = 2 * Math.PI;\n    particle.wobble.angle += angleSpeed;\n    if (particle.wobble.angle > max) {\n        particle.wobble.angle -= max;\n    }\n    particle.position.x += distance * Math.cos(particle.wobble.angle);\n    particle.position.y += distance * Math.abs(Math.sin(particle.wobble.angle));\n}\nexport class WobbleUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        var _a;\n        const wobbleOpt = particle.options.wobble;\n        if (wobbleOpt === null || wobbleOpt === void 0 ? void 0 : wobbleOpt.enable) {\n            particle.wobble = {\n                angle: getRandom() * Math.PI * 2,\n                angleSpeed: getRangeValue(wobbleOpt.speed.angle) / 360,\n                moveSpeed: getRangeValue(wobbleOpt.speed.move) / 10,\n            };\n        }\n        else {\n            particle.wobble = {\n                angle: 0,\n                angleSpeed: 0,\n                moveSpeed: 0,\n            };\n        }\n        particle.retina.wobbleDistance = getRangeValue((_a = wobbleOpt === null || wobbleOpt === void 0 ? void 0 : wobbleOpt.distance) !== null && _a !== void 0 ? _a : 0) * this.container.retina.pixelRatio;\n    }\n    isEnabled(particle) {\n        var _a;\n        return !particle.destroyed && !particle.spawning && !!((_a = particle.options.wobble) === null || _a === void 0 ? void 0 : _a.enable);\n    }\n    loadOptions(options, ...sources) {\n        if (!options.wobble) {\n            options.wobble = new Wobble();\n        }\n        for (const source of sources) {\n            options.wobble.load(source === null || source === void 0 ? void 0 : source.wobble);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateWobble(particle, delta);\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}