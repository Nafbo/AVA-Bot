{"ast":null,"code":"import { animate, cancelAnimation } from \"../Utils/Utils\";\nimport { Canvas } from \"./Canvas\";\nimport { EventListeners } from \"./Utils/EventListeners\";\nimport { FrameManager } from \"./Utils/FrameManager\";\nimport { Options } from \"../Options/Classes/Options\";\nimport { Particles } from \"./Particles\";\nimport { Retina } from \"./Retina\";\nimport { getRangeValue } from \"../Utils/NumberUtils\";\nimport { loadOptions } from \"../Utils/OptionsUtils\";\nfunction guardCheck(container) {\n  return container && !container.destroyed;\n}\nfunction loadContainerOptions(engine, container) {\n  const options = new Options(engine, container);\n  for (var _len = arguments.length, sourceOptionsArr = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    sourceOptionsArr[_key - 2] = arguments[_key];\n  }\n  loadOptions(options, ...sourceOptionsArr);\n  return options;\n}\nconst defaultPathGeneratorKey = \"default\",\n  defaultPathGenerator = {\n    generate: p => {\n      const v = p.velocity.copy();\n      v.angle += v.length * Math.PI / 180;\n      return v;\n    },\n    init: () => {},\n    update: () => {},\n    reset: () => {}\n  };\nexport class Container {\n  constructor(engine, id, sourceOptions) {\n    this.id = id;\n    this._engine = engine;\n    this.fpsLimit = 120;\n    this.smooth = false;\n    this._delay = 0;\n    this.duration = 0;\n    this.lifeTime = 0;\n    this._firstStart = true;\n    this.started = false;\n    this.destroyed = false;\n    this._paused = true;\n    this.lastFrameTime = 0;\n    this.zLayers = 100;\n    this.pageHidden = false;\n    this._sourceOptions = sourceOptions;\n    this._initialSourceOptions = sourceOptions;\n    this.retina = new Retina(this);\n    this.canvas = new Canvas(this);\n    this.particles = new Particles(this._engine, this);\n    this.frameManager = new FrameManager(this);\n    this.pathGenerators = new Map();\n    this.interactivity = {\n      mouse: {\n        clicking: false,\n        inside: false\n      }\n    };\n    this.plugins = new Map();\n    this.drawers = new Map();\n    this._options = loadContainerOptions(this._engine, this);\n    this.actualOptions = loadContainerOptions(this._engine, this);\n    this._eventListeners = new EventListeners(this);\n    if (typeof IntersectionObserver !== \"undefined\" && IntersectionObserver) {\n      this._intersectionObserver = new IntersectionObserver(entries => this._intersectionManager(entries));\n    }\n    this._engine.dispatchEvent(\"containerBuilt\", {\n      container: this\n    });\n  }\n  get options() {\n    return this._options;\n  }\n  get sourceOptions() {\n    return this._sourceOptions;\n  }\n  addClickHandler(callback) {\n    if (!guardCheck(this)) {\n      return;\n    }\n    const el = this.interactivity.element;\n    if (!el) {\n      return;\n    }\n    const clickOrTouchHandler = (e, pos, radius) => {\n      if (!guardCheck(this)) {\n        return;\n      }\n      const pxRatio = this.retina.pixelRatio,\n        posRetina = {\n          x: pos.x * pxRatio,\n          y: pos.y * pxRatio\n        },\n        particles = this.particles.quadTree.queryCircle(posRetina, radius * pxRatio);\n      callback(e, particles);\n    };\n    const clickHandler = e => {\n      if (!guardCheck(this)) {\n        return;\n      }\n      const mouseEvent = e,\n        pos = {\n          x: mouseEvent.offsetX || mouseEvent.clientX,\n          y: mouseEvent.offsetY || mouseEvent.clientY\n        };\n      clickOrTouchHandler(e, pos, 1);\n    };\n    const touchStartHandler = () => {\n      if (!guardCheck(this)) {\n        return;\n      }\n      touched = true;\n      touchMoved = false;\n    };\n    const touchMoveHandler = () => {\n      if (!guardCheck(this)) {\n        return;\n      }\n      touchMoved = true;\n    };\n    const touchEndHandler = e => {\n      if (!guardCheck(this)) {\n        return;\n      }\n      if (touched && !touchMoved) {\n        const touchEvent = e;\n        let lastTouch = touchEvent.touches[touchEvent.touches.length - 1];\n        if (!lastTouch) {\n          lastTouch = touchEvent.changedTouches[touchEvent.changedTouches.length - 1];\n          if (!lastTouch) {\n            return;\n          }\n        }\n        const element = this.canvas.element,\n          canvasRect = element ? element.getBoundingClientRect() : undefined,\n          pos = {\n            x: lastTouch.clientX - (canvasRect ? canvasRect.left : 0),\n            y: lastTouch.clientY - (canvasRect ? canvasRect.top : 0)\n          };\n        clickOrTouchHandler(e, pos, Math.max(lastTouch.radiusX, lastTouch.radiusY));\n      }\n      touched = false;\n      touchMoved = false;\n    };\n    const touchCancelHandler = () => {\n      if (!guardCheck(this)) {\n        return;\n      }\n      touched = false;\n      touchMoved = false;\n    };\n    let touched = false,\n      touchMoved = false;\n    el.addEventListener(\"click\", clickHandler);\n    el.addEventListener(\"touchstart\", touchStartHandler);\n    el.addEventListener(\"touchmove\", touchMoveHandler);\n    el.addEventListener(\"touchend\", touchEndHandler);\n    el.addEventListener(\"touchcancel\", touchCancelHandler);\n  }\n  addPath(key, generator) {\n    let override = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    if (!guardCheck(this) || !override && this.pathGenerators.has(key)) {\n      return false;\n    }\n    this.pathGenerators.set(key, generator !== null && generator !== void 0 ? generator : defaultPathGenerator);\n    return true;\n  }\n  destroy() {\n    if (!guardCheck(this)) {\n      return;\n    }\n    this.stop();\n    this.particles.destroy();\n    this.canvas.destroy();\n    for (const [, drawer] of this.drawers) {\n      if (drawer.destroy) {\n        drawer.destroy(this);\n      }\n    }\n    for (const key of this.drawers.keys()) {\n      this.drawers.delete(key);\n    }\n    this._engine.plugins.destroy(this);\n    this.destroyed = true;\n    const mainArr = this._engine.dom(),\n      idx = mainArr.findIndex(t => t === this);\n    if (idx >= 0) {\n      mainArr.splice(idx, 1);\n    }\n    this._engine.dispatchEvent(\"containerDestroyed\", {\n      container: this\n    });\n  }\n  draw(force) {\n    if (!guardCheck(this)) {\n      return;\n    }\n    let refreshTime = force;\n    this._drawAnimationFrame = animate()(async timestamp => {\n      if (refreshTime) {\n        this.lastFrameTime = undefined;\n        refreshTime = false;\n      }\n      await this.frameManager.nextFrame(timestamp);\n    });\n  }\n  exportConfiguration() {\n    return JSON.stringify(this.actualOptions, (key, value) => {\n      if (key === \"_engine\" || key === \"_container\") {\n        return;\n      }\n      return value;\n    }, 2);\n  }\n  exportImage(callback, type, quality) {\n    const element = this.canvas.element;\n    if (element) {\n      element.toBlob(callback, type !== null && type !== void 0 ? type : \"image/png\", quality);\n    }\n  }\n  exportImg(callback) {\n    this.exportImage(callback);\n  }\n  getAnimationStatus() {\n    return !this._paused && !this.pageHidden && guardCheck(this);\n  }\n  handleClickMode(mode) {\n    if (!guardCheck(this)) {\n      return;\n    }\n    this.particles.handleClickMode(mode);\n    for (const [, plugin] of this.plugins) {\n      if (plugin.handleClickMode) {\n        plugin.handleClickMode(mode);\n      }\n    }\n  }\n  async init() {\n    if (!guardCheck(this)) {\n      return;\n    }\n    const shapes = this._engine.plugins.getSupportedShapes();\n    for (const type of shapes) {\n      const drawer = this._engine.plugins.getShapeDrawer(type);\n      if (drawer) {\n        this.drawers.set(type, drawer);\n      }\n    }\n    this._options = loadContainerOptions(this._engine, this, this._initialSourceOptions, this.sourceOptions);\n    this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n    const availablePlugins = this._engine.plugins.getAvailablePlugins(this);\n    for (const [id, plugin] of availablePlugins) {\n      this.plugins.set(id, plugin);\n    }\n    this.retina.init();\n    await this.canvas.init();\n    this.updateActualOptions();\n    this.canvas.initBackground();\n    this.canvas.resize();\n    this.zLayers = this.actualOptions.zLayers;\n    this.duration = getRangeValue(this.actualOptions.duration) * 1000;\n    this._delay = getRangeValue(this.actualOptions.delay) * 1000;\n    this.lifeTime = 0;\n    this.fpsLimit = this.actualOptions.fpsLimit > 0 ? this.actualOptions.fpsLimit : 120;\n    this.smooth = this.actualOptions.smooth;\n    for (const [, drawer] of this.drawers) {\n      if (drawer.init) {\n        await drawer.init(this);\n      }\n    }\n    for (const [, plugin] of this.plugins) {\n      if (plugin.init) {\n        await plugin.init();\n      }\n    }\n    this._engine.dispatchEvent(\"containerInit\", {\n      container: this\n    });\n    this.particles.init();\n    this.particles.setDensity();\n    for (const [, plugin] of this.plugins) {\n      if (plugin.particlesSetup) {\n        plugin.particlesSetup();\n      }\n    }\n    this._engine.dispatchEvent(\"particlesSetup\", {\n      container: this\n    });\n  }\n  async loadTheme(name) {\n    if (!guardCheck(this)) {\n      return;\n    }\n    this._currentTheme = name;\n    await this.refresh();\n  }\n  pause() {\n    if (!guardCheck(this)) {\n      return;\n    }\n    if (this._drawAnimationFrame !== undefined) {\n      cancelAnimation()(this._drawAnimationFrame);\n      delete this._drawAnimationFrame;\n    }\n    if (this._paused) {\n      return;\n    }\n    for (const [, plugin] of this.plugins) {\n      if (plugin.pause) {\n        plugin.pause();\n      }\n    }\n    if (!this.pageHidden) {\n      this._paused = true;\n    }\n    this._engine.dispatchEvent(\"containerPaused\", {\n      container: this\n    });\n  }\n  play(force) {\n    if (!guardCheck(this)) {\n      return;\n    }\n    const needsUpdate = this._paused || force;\n    if (this._firstStart && !this.actualOptions.autoPlay) {\n      this._firstStart = false;\n      return;\n    }\n    if (this._paused) {\n      this._paused = false;\n    }\n    if (needsUpdate) {\n      for (const [, plugin] of this.plugins) {\n        if (plugin.play) {\n          plugin.play();\n        }\n      }\n    }\n    this._engine.dispatchEvent(\"containerPlay\", {\n      container: this\n    });\n    this.draw(needsUpdate || false);\n  }\n  async refresh() {\n    if (!guardCheck(this)) {\n      return;\n    }\n    this.stop();\n    return this.start();\n  }\n  async reset() {\n    if (!guardCheck(this)) {\n      return;\n    }\n    this._options = loadContainerOptions(this._engine, this);\n    return this.refresh();\n  }\n  setNoise(noiseOrGenerator, init, update) {\n    if (!guardCheck(this)) {\n      return;\n    }\n    this.setPath(noiseOrGenerator, init, update);\n  }\n  setPath(pathOrGenerator, init, update) {\n    if (!pathOrGenerator || !guardCheck(this)) {\n      return;\n    }\n    const pathGenerator = Object.assign({}, defaultPathGenerator);\n    if (typeof pathOrGenerator === \"function\") {\n      pathGenerator.generate = pathOrGenerator;\n      if (init) {\n        pathGenerator.init = init;\n      }\n      if (update) {\n        pathGenerator.update = update;\n      }\n    } else {\n      const oldGenerator = pathGenerator;\n      pathGenerator.generate = pathOrGenerator.generate || oldGenerator.generate;\n      pathGenerator.init = pathOrGenerator.init || oldGenerator.init;\n      pathGenerator.update = pathOrGenerator.update || oldGenerator.update;\n    }\n    this.addPath(defaultPathGeneratorKey, pathGenerator, true);\n  }\n  async start() {\n    if (!guardCheck(this) || this.started) {\n      return;\n    }\n    await this.init();\n    this.started = true;\n    await new Promise(resolve => {\n      this._delayTimeout = setTimeout(async () => {\n        this._eventListeners.addListeners();\n        if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n          this._intersectionObserver.observe(this.interactivity.element);\n        }\n        for (const [, plugin] of this.plugins) {\n          if (plugin.start) {\n            await plugin.start();\n          }\n        }\n        this._engine.dispatchEvent(\"containerStarted\", {\n          container: this\n        });\n        this.play();\n        resolve();\n      }, this._delay);\n    });\n  }\n  stop() {\n    if (!guardCheck(this) || !this.started) {\n      return;\n    }\n    if (this._delayTimeout) {\n      clearTimeout(this._delayTimeout);\n      delete this._delayTimeout;\n    }\n    this._firstStart = true;\n    this.started = false;\n    this._eventListeners.removeListeners();\n    this.pause();\n    this.particles.clear();\n    this.canvas.stop();\n    if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n      this._intersectionObserver.unobserve(this.interactivity.element);\n    }\n    for (const [, plugin] of this.plugins) {\n      if (plugin.stop) {\n        plugin.stop();\n      }\n    }\n    for (const key of this.plugins.keys()) {\n      this.plugins.delete(key);\n    }\n    this._sourceOptions = this._options;\n    this._engine.dispatchEvent(\"containerStopped\", {\n      container: this\n    });\n  }\n  updateActualOptions() {\n    this.actualOptions.responsive = [];\n    const newMaxWidth = this.actualOptions.setResponsive(this.canvas.size.width, this.retina.pixelRatio, this._options);\n    this.actualOptions.setTheme(this._currentTheme);\n    if (this.responsiveMaxWidth === newMaxWidth) {\n      return false;\n    }\n    this.responsiveMaxWidth = newMaxWidth;\n    return true;\n  }\n  _intersectionManager(entries) {\n    if (!guardCheck(this) || !this.actualOptions.pauseOnOutsideViewport) {\n      return;\n    }\n    for (const entry of entries) {\n      if (entry.target !== this.interactivity.element) {\n        continue;\n      }\n      (entry.isIntersecting ? this.play : this.pause)();\n    }\n  }\n}","map":{"version":3,"names":["animate","cancelAnimation","Canvas","EventListeners","FrameManager","Options","Particles","Retina","getRangeValue","loadOptions","guardCheck","container","destroyed","loadContainerOptions","engine","options","_len","arguments","length","sourceOptionsArr","Array","_key","defaultPathGeneratorKey","defaultPathGenerator","generate","p","v","velocity","copy","angle","Math","PI","init","update","reset","Container","constructor","id","sourceOptions","_engine","fpsLimit","smooth","_delay","duration","lifeTime","_firstStart","started","_paused","lastFrameTime","zLayers","pageHidden","_sourceOptions","_initialSourceOptions","retina","canvas","particles","frameManager","pathGenerators","Map","interactivity","mouse","clicking","inside","plugins","drawers","_options","actualOptions","_eventListeners","IntersectionObserver","_intersectionObserver","entries","_intersectionManager","dispatchEvent","addClickHandler","callback","el","element","clickOrTouchHandler","e","pos","radius","pxRatio","pixelRatio","posRetina","x","y","quadTree","queryCircle","clickHandler","mouseEvent","offsetX","clientX","offsetY","clientY","touchStartHandler","touched","touchMoved","touchMoveHandler","touchEndHandler","touchEvent","lastTouch","touches","changedTouches","canvasRect","getBoundingClientRect","undefined","left","top","max","radiusX","radiusY","touchCancelHandler","addEventListener","addPath","key","generator","override","has","set","destroy","stop","drawer","keys","delete","mainArr","dom","idx","findIndex","t","splice","draw","force","refreshTime","_drawAnimationFrame","timestamp","nextFrame","exportConfiguration","JSON","stringify","value","exportImage","type","quality","toBlob","exportImg","getAnimationStatus","handleClickMode","mode","plugin","shapes","getSupportedShapes","getShapeDrawer","availablePlugins","getAvailablePlugins","updateActualOptions","initBackground","resize","delay","setDensity","particlesSetup","loadTheme","name","_currentTheme","refresh","pause","play","needsUpdate","autoPlay","start","setNoise","noiseOrGenerator","setPath","pathOrGenerator","pathGenerator","Object","assign","oldGenerator","Promise","resolve","_delayTimeout","setTimeout","addListeners","HTMLElement","observe","clearTimeout","removeListeners","clear","unobserve","responsive","newMaxWidth","setResponsive","size","width","setTheme","responsiveMaxWidth","pauseOnOutsideViewport","entry","target","isIntersecting"],"sources":["/Users/adri22/Desktop/AVA-Bot/app-web/node_modules/tsparticles-engine/esm/Core/Container.js"],"sourcesContent":["import { animate, cancelAnimation } from \"../Utils/Utils\";\nimport { Canvas } from \"./Canvas\";\nimport { EventListeners } from \"./Utils/EventListeners\";\nimport { FrameManager } from \"./Utils/FrameManager\";\nimport { Options } from \"../Options/Classes/Options\";\nimport { Particles } from \"./Particles\";\nimport { Retina } from \"./Retina\";\nimport { getRangeValue } from \"../Utils/NumberUtils\";\nimport { loadOptions } from \"../Utils/OptionsUtils\";\nfunction guardCheck(container) {\n    return container && !container.destroyed;\n}\nfunction loadContainerOptions(engine, container, ...sourceOptionsArr) {\n    const options = new Options(engine, container);\n    loadOptions(options, ...sourceOptionsArr);\n    return options;\n}\nconst defaultPathGeneratorKey = \"default\", defaultPathGenerator = {\n    generate: (p) => {\n        const v = p.velocity.copy();\n        v.angle += (v.length * Math.PI) / 180;\n        return v;\n    },\n    init: () => {\n    },\n    update: () => {\n    },\n    reset: () => {\n    },\n};\nexport class Container {\n    constructor(engine, id, sourceOptions) {\n        this.id = id;\n        this._engine = engine;\n        this.fpsLimit = 120;\n        this.smooth = false;\n        this._delay = 0;\n        this.duration = 0;\n        this.lifeTime = 0;\n        this._firstStart = true;\n        this.started = false;\n        this.destroyed = false;\n        this._paused = true;\n        this.lastFrameTime = 0;\n        this.zLayers = 100;\n        this.pageHidden = false;\n        this._sourceOptions = sourceOptions;\n        this._initialSourceOptions = sourceOptions;\n        this.retina = new Retina(this);\n        this.canvas = new Canvas(this);\n        this.particles = new Particles(this._engine, this);\n        this.frameManager = new FrameManager(this);\n        this.pathGenerators = new Map();\n        this.interactivity = {\n            mouse: {\n                clicking: false,\n                inside: false,\n            },\n        };\n        this.plugins = new Map();\n        this.drawers = new Map();\n        this._options = loadContainerOptions(this._engine, this);\n        this.actualOptions = loadContainerOptions(this._engine, this);\n        this._eventListeners = new EventListeners(this);\n        if (typeof IntersectionObserver !== \"undefined\" && IntersectionObserver) {\n            this._intersectionObserver = new IntersectionObserver((entries) => this._intersectionManager(entries));\n        }\n        this._engine.dispatchEvent(\"containerBuilt\", { container: this });\n    }\n    get options() {\n        return this._options;\n    }\n    get sourceOptions() {\n        return this._sourceOptions;\n    }\n    addClickHandler(callback) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const el = this.interactivity.element;\n        if (!el) {\n            return;\n        }\n        const clickOrTouchHandler = (e, pos, radius) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const pxRatio = this.retina.pixelRatio, posRetina = {\n                x: pos.x * pxRatio,\n                y: pos.y * pxRatio,\n            }, particles = this.particles.quadTree.queryCircle(posRetina, radius * pxRatio);\n            callback(e, particles);\n        };\n        const clickHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const mouseEvent = e, pos = {\n                x: mouseEvent.offsetX || mouseEvent.clientX,\n                y: mouseEvent.offsetY || mouseEvent.clientY,\n            };\n            clickOrTouchHandler(e, pos, 1);\n        };\n        const touchStartHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = true;\n            touchMoved = false;\n        };\n        const touchMoveHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touchMoved = true;\n        };\n        const touchEndHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            if (touched && !touchMoved) {\n                const touchEvent = e;\n                let lastTouch = touchEvent.touches[touchEvent.touches.length - 1];\n                if (!lastTouch) {\n                    lastTouch = touchEvent.changedTouches[touchEvent.changedTouches.length - 1];\n                    if (!lastTouch) {\n                        return;\n                    }\n                }\n                const element = this.canvas.element, canvasRect = element ? element.getBoundingClientRect() : undefined, pos = {\n                    x: lastTouch.clientX - (canvasRect ? canvasRect.left : 0),\n                    y: lastTouch.clientY - (canvasRect ? canvasRect.top : 0),\n                };\n                clickOrTouchHandler(e, pos, Math.max(lastTouch.radiusX, lastTouch.radiusY));\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        const touchCancelHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        let touched = false, touchMoved = false;\n        el.addEventListener(\"click\", clickHandler);\n        el.addEventListener(\"touchstart\", touchStartHandler);\n        el.addEventListener(\"touchmove\", touchMoveHandler);\n        el.addEventListener(\"touchend\", touchEndHandler);\n        el.addEventListener(\"touchcancel\", touchCancelHandler);\n    }\n    addPath(key, generator, override = false) {\n        if (!guardCheck(this) || (!override && this.pathGenerators.has(key))) {\n            return false;\n        }\n        this.pathGenerators.set(key, generator !== null && generator !== void 0 ? generator : defaultPathGenerator);\n        return true;\n    }\n    destroy() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        this.particles.destroy();\n        this.canvas.destroy();\n        for (const [, drawer] of this.drawers) {\n            if (drawer.destroy) {\n                drawer.destroy(this);\n            }\n        }\n        for (const key of this.drawers.keys()) {\n            this.drawers.delete(key);\n        }\n        this._engine.plugins.destroy(this);\n        this.destroyed = true;\n        const mainArr = this._engine.dom(), idx = mainArr.findIndex((t) => t === this);\n        if (idx >= 0) {\n            mainArr.splice(idx, 1);\n        }\n        this._engine.dispatchEvent(\"containerDestroyed\", { container: this });\n    }\n    draw(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        let refreshTime = force;\n        this._drawAnimationFrame = animate()(async (timestamp) => {\n            if (refreshTime) {\n                this.lastFrameTime = undefined;\n                refreshTime = false;\n            }\n            await this.frameManager.nextFrame(timestamp);\n        });\n    }\n    exportConfiguration() {\n        return JSON.stringify(this.actualOptions, (key, value) => {\n            if (key === \"_engine\" || key === \"_container\") {\n                return;\n            }\n            return value;\n        }, 2);\n    }\n    exportImage(callback, type, quality) {\n        const element = this.canvas.element;\n        if (element) {\n            element.toBlob(callback, type !== null && type !== void 0 ? type : \"image/png\", quality);\n        }\n    }\n    exportImg(callback) {\n        this.exportImage(callback);\n    }\n    getAnimationStatus() {\n        return !this._paused && !this.pageHidden && guardCheck(this);\n    }\n    handleClickMode(mode) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.particles.handleClickMode(mode);\n        for (const [, plugin] of this.plugins) {\n            if (plugin.handleClickMode) {\n                plugin.handleClickMode(mode);\n            }\n        }\n    }\n    async init() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const shapes = this._engine.plugins.getSupportedShapes();\n        for (const type of shapes) {\n            const drawer = this._engine.plugins.getShapeDrawer(type);\n            if (drawer) {\n                this.drawers.set(type, drawer);\n            }\n        }\n        this._options = loadContainerOptions(this._engine, this, this._initialSourceOptions, this.sourceOptions);\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n        const availablePlugins = this._engine.plugins.getAvailablePlugins(this);\n        for (const [id, plugin] of availablePlugins) {\n            this.plugins.set(id, plugin);\n        }\n        this.retina.init();\n        await this.canvas.init();\n        this.updateActualOptions();\n        this.canvas.initBackground();\n        this.canvas.resize();\n        this.zLayers = this.actualOptions.zLayers;\n        this.duration = getRangeValue(this.actualOptions.duration) * 1000;\n        this._delay = getRangeValue(this.actualOptions.delay) * 1000;\n        this.lifeTime = 0;\n        this.fpsLimit = this.actualOptions.fpsLimit > 0 ? this.actualOptions.fpsLimit : 120;\n        this.smooth = this.actualOptions.smooth;\n        for (const [, drawer] of this.drawers) {\n            if (drawer.init) {\n                await drawer.init(this);\n            }\n        }\n        for (const [, plugin] of this.plugins) {\n            if (plugin.init) {\n                await plugin.init();\n            }\n        }\n        this._engine.dispatchEvent(\"containerInit\", { container: this });\n        this.particles.init();\n        this.particles.setDensity();\n        for (const [, plugin] of this.plugins) {\n            if (plugin.particlesSetup) {\n                plugin.particlesSetup();\n            }\n        }\n        this._engine.dispatchEvent(\"particlesSetup\", { container: this });\n    }\n    async loadTheme(name) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._currentTheme = name;\n        await this.refresh();\n    }\n    pause() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        if (this._drawAnimationFrame !== undefined) {\n            cancelAnimation()(this._drawAnimationFrame);\n            delete this._drawAnimationFrame;\n        }\n        if (this._paused) {\n            return;\n        }\n        for (const [, plugin] of this.plugins) {\n            if (plugin.pause) {\n                plugin.pause();\n            }\n        }\n        if (!this.pageHidden) {\n            this._paused = true;\n        }\n        this._engine.dispatchEvent(\"containerPaused\", { container: this });\n    }\n    play(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const needsUpdate = this._paused || force;\n        if (this._firstStart && !this.actualOptions.autoPlay) {\n            this._firstStart = false;\n            return;\n        }\n        if (this._paused) {\n            this._paused = false;\n        }\n        if (needsUpdate) {\n            for (const [, plugin] of this.plugins) {\n                if (plugin.play) {\n                    plugin.play();\n                }\n            }\n        }\n        this._engine.dispatchEvent(\"containerPlay\", { container: this });\n        this.draw(needsUpdate || false);\n    }\n    async refresh() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        return this.start();\n    }\n    async reset() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._options = loadContainerOptions(this._engine, this);\n        return this.refresh();\n    }\n    setNoise(noiseOrGenerator, init, update) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.setPath(noiseOrGenerator, init, update);\n    }\n    setPath(pathOrGenerator, init, update) {\n        if (!pathOrGenerator || !guardCheck(this)) {\n            return;\n        }\n        const pathGenerator = Object.assign({}, defaultPathGenerator);\n        if (typeof pathOrGenerator === \"function\") {\n            pathGenerator.generate = pathOrGenerator;\n            if (init) {\n                pathGenerator.init = init;\n            }\n            if (update) {\n                pathGenerator.update = update;\n            }\n        }\n        else {\n            const oldGenerator = pathGenerator;\n            pathGenerator.generate = pathOrGenerator.generate || oldGenerator.generate;\n            pathGenerator.init = pathOrGenerator.init || oldGenerator.init;\n            pathGenerator.update = pathOrGenerator.update || oldGenerator.update;\n        }\n        this.addPath(defaultPathGeneratorKey, pathGenerator, true);\n    }\n    async start() {\n        if (!guardCheck(this) || this.started) {\n            return;\n        }\n        await this.init();\n        this.started = true;\n        await new Promise((resolve) => {\n            this._delayTimeout = setTimeout(async () => {\n                this._eventListeners.addListeners();\n                if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n                    this._intersectionObserver.observe(this.interactivity.element);\n                }\n                for (const [, plugin] of this.plugins) {\n                    if (plugin.start) {\n                        await plugin.start();\n                    }\n                }\n                this._engine.dispatchEvent(\"containerStarted\", { container: this });\n                this.play();\n                resolve();\n            }, this._delay);\n        });\n    }\n    stop() {\n        if (!guardCheck(this) || !this.started) {\n            return;\n        }\n        if (this._delayTimeout) {\n            clearTimeout(this._delayTimeout);\n            delete this._delayTimeout;\n        }\n        this._firstStart = true;\n        this.started = false;\n        this._eventListeners.removeListeners();\n        this.pause();\n        this.particles.clear();\n        this.canvas.stop();\n        if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n            this._intersectionObserver.unobserve(this.interactivity.element);\n        }\n        for (const [, plugin] of this.plugins) {\n            if (plugin.stop) {\n                plugin.stop();\n            }\n        }\n        for (const key of this.plugins.keys()) {\n            this.plugins.delete(key);\n        }\n        this._sourceOptions = this._options;\n        this._engine.dispatchEvent(\"containerStopped\", { container: this });\n    }\n    updateActualOptions() {\n        this.actualOptions.responsive = [];\n        const newMaxWidth = this.actualOptions.setResponsive(this.canvas.size.width, this.retina.pixelRatio, this._options);\n        this.actualOptions.setTheme(this._currentTheme);\n        if (this.responsiveMaxWidth === newMaxWidth) {\n            return false;\n        }\n        this.responsiveMaxWidth = newMaxWidth;\n        return true;\n    }\n    _intersectionManager(entries) {\n        if (!guardCheck(this) || !this.actualOptions.pauseOnOutsideViewport) {\n            return;\n        }\n        for (const entry of entries) {\n            if (entry.target !== this.interactivity.element) {\n                continue;\n            }\n            (entry.isIntersecting ? this.play : this.pause)();\n        }\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}