{"ast":null,"code":"import { ExternalInteractorBase, colorMix, drawLine, getStyleFromHsl, getStyleFromRgb, isInArray } from \"tsparticles-engine\";\nimport { Connect } from \"./Options/Classes/Connect\";\nfunction gradient(context, p1, p2, opacity) {\n  const gradStop = Math.floor(p2.getRadius() / p1.getRadius()),\n    color1 = p1.getFillColor(),\n    color2 = p2.getFillColor();\n  if (!color1 || !color2) {\n    return;\n  }\n  const sourcePos = p1.getPosition(),\n    destPos = p2.getPosition(),\n    midRgb = colorMix(color1, color2, p1.getRadius(), p2.getRadius()),\n    grad = context.createLinearGradient(sourcePos.x, sourcePos.y, destPos.x, destPos.y);\n  grad.addColorStop(0, getStyleFromHsl(color1, opacity));\n  grad.addColorStop(gradStop > 1 ? 1 : gradStop, getStyleFromRgb(midRgb, opacity));\n  grad.addColorStop(1, getStyleFromHsl(color2, opacity));\n  return grad;\n}\nfunction drawConnectLine(context, width, lineStyle, begin, end) {\n  drawLine(context, begin, end);\n  context.lineWidth = width;\n  context.strokeStyle = lineStyle;\n  context.stroke();\n}\nfunction lineStyle(container, ctx, p1, p2) {\n  const options = container.actualOptions,\n    connectOptions = options.interactivity.modes.connect;\n  if (!connectOptions) {\n    return;\n  }\n  return gradient(ctx, p1, p2, connectOptions.links.opacity);\n}\nfunction drawConnection(container, p1, p2) {\n  container.canvas.draw(ctx => {\n    var _a;\n    const ls = lineStyle(container, ctx, p1, p2);\n    if (!ls) {\n      return;\n    }\n    const pos1 = p1.getPosition(),\n      pos2 = p2.getPosition();\n    drawConnectLine(ctx, (_a = p1.retina.linksWidth) !== null && _a !== void 0 ? _a : 0, ls, pos1, pos2);\n  });\n}\nexport class Connector extends ExternalInteractorBase {\n  constructor(container) {\n    super(container);\n  }\n  clear() {}\n  init() {\n    const container = this.container,\n      connect = container.actualOptions.interactivity.modes.connect;\n    if (!connect) {\n      return;\n    }\n    container.retina.connectModeDistance = connect.distance * container.retina.pixelRatio;\n    container.retina.connectModeRadius = connect.radius * container.retina.pixelRatio;\n  }\n  async interact() {\n    const container = this.container,\n      options = container.actualOptions;\n    if (options.interactivity.events.onHover.enable && container.interactivity.status === \"pointermove\") {\n      const mousePos = container.interactivity.mouse.position;\n      if (!container.retina.connectModeDistance || container.retina.connectModeDistance < 0 || !container.retina.connectModeRadius || container.retina.connectModeRadius < 0 || !mousePos) {\n        return;\n      }\n      const distance = Math.abs(container.retina.connectModeRadius),\n        query = container.particles.quadTree.queryCircle(mousePos, distance, p => this.isEnabled(p));\n      let i = 0;\n      for (const p1 of query) {\n        const pos1 = p1.getPosition();\n        for (const p2 of query.slice(i + 1)) {\n          const pos2 = p2.getPosition(),\n            distMax = Math.abs(container.retina.connectModeDistance),\n            xDiff = Math.abs(pos1.x - pos2.x),\n            yDiff = Math.abs(pos1.y - pos2.y);\n          if (xDiff < distMax && yDiff < distMax) {\n            drawConnection(container, p1, p2);\n          }\n        }\n        ++i;\n      }\n    }\n  }\n  isEnabled(particle) {\n    var _a;\n    const container = this.container,\n      mouse = container.interactivity.mouse,\n      events = ((_a = particle === null || particle === void 0 ? void 0 : particle.interactivity) !== null && _a !== void 0 ? _a : container.actualOptions.interactivity).events;\n    if (!(events.onHover.enable && mouse.position)) {\n      return false;\n    }\n    return isInArray(\"connect\", events.onHover.mode);\n  }\n  loadModeOptions(options) {\n    if (!options.connect) {\n      options.connect = new Connect();\n    }\n    for (var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      sources[_key - 1] = arguments[_key];\n    }\n    for (const source of sources) {\n      options.connect.load(source === null || source === void 0 ? void 0 : source.connect);\n    }\n  }\n  reset() {}\n}","map":{"version":3,"names":["ExternalInteractorBase","colorMix","drawLine","getStyleFromHsl","getStyleFromRgb","isInArray","Connect","gradient","context","p1","p2","opacity","gradStop","Math","floor","getRadius","color1","getFillColor","color2","sourcePos","getPosition","destPos","midRgb","grad","createLinearGradient","x","y","addColorStop","drawConnectLine","width","lineStyle","begin","end","lineWidth","strokeStyle","stroke","container","ctx","options","actualOptions","connectOptions","interactivity","modes","connect","links","drawConnection","canvas","draw","_a","ls","pos1","pos2","retina","linksWidth","Connector","constructor","clear","init","connectModeDistance","distance","pixelRatio","connectModeRadius","radius","interact","events","onHover","enable","status","mousePos","mouse","position","abs","query","particles","quadTree","queryCircle","p","isEnabled","i","slice","distMax","xDiff","yDiff","particle","mode","loadModeOptions","_len","arguments","length","sources","Array","_key","source","load","reset"],"sources":["/Users/adri22/Desktop/AVA-Bot/app-web/node_modules/tsparticles-interaction-external-connect/esm/Connector.js"],"sourcesContent":["import { ExternalInteractorBase, colorMix, drawLine, getStyleFromHsl, getStyleFromRgb, isInArray, } from \"tsparticles-engine\";\nimport { Connect } from \"./Options/Classes/Connect\";\nfunction gradient(context, p1, p2, opacity) {\n    const gradStop = Math.floor(p2.getRadius() / p1.getRadius()), color1 = p1.getFillColor(), color2 = p2.getFillColor();\n    if (!color1 || !color2) {\n        return;\n    }\n    const sourcePos = p1.getPosition(), destPos = p2.getPosition(), midRgb = colorMix(color1, color2, p1.getRadius(), p2.getRadius()), grad = context.createLinearGradient(sourcePos.x, sourcePos.y, destPos.x, destPos.y);\n    grad.addColorStop(0, getStyleFromHsl(color1, opacity));\n    grad.addColorStop(gradStop > 1 ? 1 : gradStop, getStyleFromRgb(midRgb, opacity));\n    grad.addColorStop(1, getStyleFromHsl(color2, opacity));\n    return grad;\n}\nfunction drawConnectLine(context, width, lineStyle, begin, end) {\n    drawLine(context, begin, end);\n    context.lineWidth = width;\n    context.strokeStyle = lineStyle;\n    context.stroke();\n}\nfunction lineStyle(container, ctx, p1, p2) {\n    const options = container.actualOptions, connectOptions = options.interactivity.modes.connect;\n    if (!connectOptions) {\n        return;\n    }\n    return gradient(ctx, p1, p2, connectOptions.links.opacity);\n}\nfunction drawConnection(container, p1, p2) {\n    container.canvas.draw((ctx) => {\n        var _a;\n        const ls = lineStyle(container, ctx, p1, p2);\n        if (!ls) {\n            return;\n        }\n        const pos1 = p1.getPosition(), pos2 = p2.getPosition();\n        drawConnectLine(ctx, (_a = p1.retina.linksWidth) !== null && _a !== void 0 ? _a : 0, ls, pos1, pos2);\n    });\n}\nexport class Connector extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, connect = container.actualOptions.interactivity.modes.connect;\n        if (!connect) {\n            return;\n        }\n        container.retina.connectModeDistance = connect.distance * container.retina.pixelRatio;\n        container.retina.connectModeRadius = connect.radius * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions;\n        if (options.interactivity.events.onHover.enable && container.interactivity.status === \"pointermove\") {\n            const mousePos = container.interactivity.mouse.position;\n            if (!container.retina.connectModeDistance ||\n                container.retina.connectModeDistance < 0 ||\n                !container.retina.connectModeRadius ||\n                container.retina.connectModeRadius < 0 ||\n                !mousePos) {\n                return;\n            }\n            const distance = Math.abs(container.retina.connectModeRadius), query = container.particles.quadTree.queryCircle(mousePos, distance, (p) => this.isEnabled(p));\n            let i = 0;\n            for (const p1 of query) {\n                const pos1 = p1.getPosition();\n                for (const p2 of query.slice(i + 1)) {\n                    const pos2 = p2.getPosition(), distMax = Math.abs(container.retina.connectModeDistance), xDiff = Math.abs(pos1.x - pos2.x), yDiff = Math.abs(pos1.y - pos2.y);\n                    if (xDiff < distMax && yDiff < distMax) {\n                        drawConnection(container, p1, p2);\n                    }\n                }\n                ++i;\n            }\n        }\n    }\n    isEnabled(particle) {\n        var _a;\n        const container = this.container, mouse = container.interactivity.mouse, events = ((_a = particle === null || particle === void 0 ? void 0 : particle.interactivity) !== null && _a !== void 0 ? _a : container.actualOptions.interactivity).events;\n        if (!(events.onHover.enable && mouse.position)) {\n            return false;\n        }\n        return isInArray(\"connect\", events.onHover.mode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.connect) {\n            options.connect = new Connect();\n        }\n        for (const source of sources) {\n            options.connect.load(source === null || source === void 0 ? void 0 : source.connect);\n        }\n    }\n    reset() {\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}